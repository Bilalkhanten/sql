#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..idef7138361a', 'lib/sql/parser.racc', 68

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..idef7138361a

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 17, :_reduce_1,
 3, 18, :_reduce_2,
 1, 18, :_reduce_none,
 1, 19, :_reduce_none,
 3, 21, :_reduce_5,
 3, 21, :_reduce_6,
 1, 21, :_reduce_none,
 3, 22, :_reduce_8,
 3, 22, :_reduce_9,
 1, 22, :_reduce_none,
 2, 23, :_reduce_11,
 2, 23, :_reduce_12,
 1, 23, :_reduce_none,
 1, 24, :_reduce_none,
 3, 24, :_reduce_15,
 1, 25, :_reduce_none,
 1, 25, :_reduce_none,
 1, 20, :_reduce_none,
 1, 27, :_reduce_19,
 1, 27, :_reduce_none,
 1, 28, :_reduce_none,
 2, 29, :_reduce_22,
 1, 26, :_reduce_none,
 3, 30, :_reduce_24,
 2, 30, :_reduce_25,
 2, 30, :_reduce_26,
 1, 30, :_reduce_27 ]

racc_reduce_n = 28

racc_shift_n = 43

racc_action_table = [
    12,    14,    23,    24,    19,    12,    14,     3,     5,    19,
     8,    10,     3,     5,     1,     8,    10,    12,    14,    26,
    27,    19,    12,    14,     3,     5,    19,     8,    10,     3,
     5,    33,     8,    10,    12,    14,    34,    29,    19,    12,
    14,     3,     5,    19,     8,    10,     3,     5,    19,     8,
    10,     3,     5,    19,     8,    10,     3,     5,    28,     8,
    10,    25,    22,    39,    40,    42 ]

racc_action_check = [
    19,    19,     4,     4,    19,     1,     1,    19,    19,     1,
    19,    19,     1,     1,     0,     1,     1,    27,    27,     6,
     6,    27,    23,    23,    27,    27,    23,    27,    27,    23,
    23,    20,    23,    23,    26,    26,    22,    10,    26,    24,
    24,    26,    26,    24,    26,    26,    24,    24,    12,    24,
    24,    12,    12,    14,    12,    12,    14,    14,     8,    14,
    14,     5,     2,    28,    32,    33 ]

racc_action_pointer = [
    12,     1,    62,   nil,    -2,    48,    13,   nil,    43,   nil,
    23,   nil,    40,   nil,    45,   nil,   nil,   nil,   nil,    -4,
    28,   nil,    36,    18,    35,   nil,    30,    13,    49,   nil,
   nil,   nil,    55,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_action_default = [
   -28,   -28,   -28,   -19,    -7,   -28,   -10,   -13,   -27,   -14,
   -28,   -16,   -28,   -17,   -28,   -20,   -21,    -1,   -23,   -28,
    -3,    -4,   -28,   -28,   -28,   -22,   -28,   -28,   -25,   -26,
   -11,   -12,   -28,   -28,    43,    -5,    -6,    -8,    -9,   -24,
   -15,    -2,   -18 ]

racc_goto_table = [
    20,    30,    41,    31,    37,    38,    35,    36,    17,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32 ]

racc_goto_check = [
     3,     8,     4,     8,     6,     6,     5,     5,     2,     1,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     9,     7,    -1,   -31,   -17,   -22,   nil,   -11,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    21,     4,     6,     7,     9,
    11,    13,    15,    16,    18 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :AS => 3,
 :plus_sign => 4,
 :minus_sign => 5,
 :asterisk => 6,
 :solidus => 7,
 :left_paren => 8,
 :right_paren => 9,
 :identifier => 10,
 :character_string_literal => 11,
 :DATE => 12,
 :date_string => 13,
 :unsigned_integer => 14,
 :period => 15 }

racc_use_result_var = true

racc_nt_base = 16

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'AS',
'plus_sign',
'minus_sign',
'asterisk',
'solidus',
'left_paren',
'right_paren',
'identifier',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'period',
'$start',
'query_specification',
'derived_column',
'value_expression',
'column_name',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'unsigned_numeric_literal',
'general_literal',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 9
  def _reduce_2( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

 # reduce 3 omitted

 # reduce 4 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 17
  def _reduce_5( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 18
  def _reduce_6( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 7 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 22
  def _reduce_8( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 23
  def _reduce_9( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 27
  def _reduce_11( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 28
  def _reduce_12( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 13 omitted

 # reduce 14 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 33
  def _reduce_15( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 45
  def _reduce_19( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 52
  def _reduce_22( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 23 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 58
  def _reduce_24( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 59
  def _reduce_25( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 60
  def _reduce_26( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 61
  def _reduce_27( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

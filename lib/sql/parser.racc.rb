#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..idb343d81e21', 'lib/sql/parser.racc', 63

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..idb343d81e21

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 15, :_reduce_1,
 1, 16, :_reduce_none,
 1, 17, :_reduce_none,
 3, 18, :_reduce_4,
 3, 18, :_reduce_5,
 1, 18, :_reduce_none,
 3, 19, :_reduce_7,
 3, 19, :_reduce_8,
 1, 19, :_reduce_none,
 2, 20, :_reduce_10,
 2, 20, :_reduce_11,
 1, 20, :_reduce_none,
 1, 21, :_reduce_none,
 3, 21, :_reduce_14,
 1, 22, :_reduce_none,
 1, 22, :_reduce_none,
 1, 24, :_reduce_17,
 1, 24, :_reduce_none,
 1, 25, :_reduce_none,
 2, 26, :_reduce_20,
 1, 23, :_reduce_none,
 3, 27, :_reduce_22,
 2, 27, :_reduce_23,
 2, 27, :_reduce_24,
 1, 27, :_reduce_25 ]

racc_reduce_n = 26

racc_shift_n = 40

racc_action_table = [
     9,    11,    28,    29,    15,    32,    18,    20,    33,     4,
     6,     9,    11,    30,    31,    15,    34,    18,    20,    35,
     4,     6,     9,    11,    24,    23,    15,    22,    18,    20,
     1,     4,     6,     9,    11,   nil,   nil,    15,   nil,    18,
    20,   nil,     4,     6,     9,    11,   nil,   nil,    15,   nil,
    18,    20,   nil,     4,     6,     9,    11,   nil,   nil,    15,
   nil,    18,    20,   nil,     4,     6,    15,   nil,    18,    20,
   nil,     4,     6,    15,   nil,    18,    20,   nil,     4,     6 ]

racc_action_check = [
    31,    31,    17,    17,    31,    20,    31,    31,    22,    31,
    31,     1,     1,    19,    19,     1,    23,     1,     1,    27,
     1,     1,    30,    30,     6,     4,    30,     2,    30,    30,
     0,    30,    30,    29,    29,   nil,   nil,    29,   nil,    29,
    29,   nil,    29,    29,    15,    15,   nil,   nil,    15,   nil,
    15,    15,   nil,    15,    15,    28,    28,   nil,   nil,    28,
   nil,    28,    28,   nil,    28,    28,    11,   nil,    11,    11,
   nil,    11,    11,     9,   nil,     9,     9,   nil,     9,     9 ]

racc_action_pointer = [
    28,     8,    27,   nil,    12,   nil,    12,   nil,   nil,    66,
   nil,    59,   nil,   nil,   nil,    41,   nil,    -1,   nil,     8,
    -6,   nil,     8,     4,   nil,   nil,   nil,    11,    52,    30,
    19,    -3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -26,   -26,   -26,   -13,   -25,   -15,   -26,   -16,   -18,   -26,
   -19,   -26,   -21,    -1,    -2,   -26,    -3,    -6,   -17,    -9,
   -26,   -12,   -26,   -23,   -24,   -10,   -11,   -26,   -26,   -26,
   -26,   -26,   -20,    40,   -22,   -14,    -4,    -5,    -7,    -8 ]

racc_goto_table = [
    14,    25,    13,    26,    38,    39,    36,    37,     2,   nil,
   nil,   nil,   nil,   nil,    27 ]

racc_goto_check = [
     3,     7,     2,     7,     5,     5,     4,     4,     1,   nil,
   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     8,     1,    -1,   -22,   -26,   nil,    -8,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    16,    17,    19,    21,     3,     5,
     7,     8,    10,    12 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :plus_sign => 3,
 :minus_sign => 4,
 :asterisk => 5,
 :solidus => 6,
 :left_paren => 7,
 :right_paren => 8,
 :character_string_literal => 9,
 :DATE => 10,
 :date_string => 11,
 :unsigned_integer => 12,
 :period => 13 }

racc_use_result_var = true

racc_nt_base = 14

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'plus_sign',
'minus_sign',
'asterisk',
'solidus',
'left_paren',
'right_paren',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'period',
'$start',
'query_specification',
'derived_column',
'value_expression',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'unsigned_numeric_literal',
'general_literal',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 16
  def _reduce_4( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 17
  def _reduce_5( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 21
  def _reduce_7( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 22
  def _reduce_8( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 9 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 26
  def _reduce_10( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 27
  def _reduce_11( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 12 omitted

 # reduce 13 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 32
  def _reduce_14( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 40
  def _reduce_17( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 18 omitted

 # reduce 19 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 47
  def _reduce_20( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 53
  def _reduce_22( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 54
  def _reduce_23( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_24( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 56
  def _reduce_25( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

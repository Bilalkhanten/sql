#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..idb26c2453b1', 'lib/sql/parser.racc', 287

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..idb26c2453b1

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 56, :_reduce_none,
 1, 57, :_reduce_none,
 2, 58, :_reduce_3,
 0, 60, :_reduce_none,
 3, 60, :_reduce_5,
 3, 61, :_reduce_6,
 1, 61, :_reduce_none,
 2, 62, :_reduce_8,
 1, 63, :_reduce_none,
 1, 63, :_reduce_10,
 0, 64, :_reduce_11,
 1, 64, :_reduce_12,
 1, 64, :_reduce_13,
 3, 66, :_reduce_14,
 1, 59, :_reduce_none,
 3, 67, :_reduce_16,
 2, 67, :_reduce_17,
 1, 68, :_reduce_18,
 1, 68, :_reduce_19,
 3, 70, :_reduce_20,
 1, 70, :_reduce_none,
 3, 71, :_reduce_22,
 2, 71, :_reduce_23,
 1, 71, :_reduce_none,
 4, 69, :_reduce_25,
 2, 73, :_reduce_26,
 3, 77, :_reduce_27,
 2, 77, :_reduce_28,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 80, :_reduce_none,
 1, 79, :_reduce_none,
 1, 79, :_reduce_none,
 3, 81, :_reduce_34,
 4, 81, :_reduce_35,
 5, 82, :_reduce_36,
 1, 83, :_reduce_37,
 2, 83, :_reduce_38,
 1, 83, :_reduce_39,
 2, 83, :_reduce_40,
 1, 83, :_reduce_41,
 1, 83, :_reduce_42,
 2, 83, :_reduce_43,
 1, 84, :_reduce_none,
 1, 84, :_reduce_none,
 2, 85, :_reduce_46,
 4, 86, :_reduce_47,
 1, 88, :_reduce_none,
 0, 74, :_reduce_none,
 2, 74, :_reduce_50,
 0, 75, :_reduce_none,
 3, 75, :_reduce_52,
 3, 90, :_reduce_53,
 1, 90, :_reduce_none,
 1, 91, :_reduce_none,
 0, 76, :_reduce_none,
 2, 76, :_reduce_57,
 1, 93, :_reduce_none,
 6, 94, :_reduce_59,
 5, 94, :_reduce_60,
 4, 96, :_reduce_61,
 3, 96, :_reduce_62,
 1, 97, :_reduce_none,
 3, 97, :_reduce_64,
 3, 98, :_reduce_65,
 1, 98, :_reduce_none,
 4, 99, :_reduce_67,
 3, 99, :_reduce_68,
 4, 100, :_reduce_69,
 3, 100, :_reduce_70,
 2, 101, :_reduce_71,
 1, 78, :_reduce_72,
 3, 89, :_reduce_73,
 1, 89, :_reduce_none,
 1, 87, :_reduce_none,
 3, 87, :_reduce_76,
 1, 102, :_reduce_none,
 3, 102, :_reduce_78,
 2, 103, :_reduce_79,
 1, 103, :_reduce_none,
 1, 104, :_reduce_none,
 1, 105, :_reduce_none,
 3, 105, :_reduce_83,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 3, 107, :_reduce_90,
 3, 107, :_reduce_91,
 3, 107, :_reduce_92,
 3, 107, :_reduce_93,
 3, 107, :_reduce_94,
 3, 107, :_reduce_95,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 108, :_reduce_none,
 1, 72, :_reduce_none,
 3, 109, :_reduce_100,
 3, 109, :_reduce_101,
 1, 109, :_reduce_none,
 3, 110, :_reduce_103,
 3, 110, :_reduce_104,
 1, 110, :_reduce_none,
 2, 111, :_reduce_106,
 2, 111, :_reduce_107,
 1, 111, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 3, 112, :_reduce_112,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 3, 92, :_reduce_115,
 1, 92, :_reduce_none,
 1, 117, :_reduce_none,
 4, 114, :_reduce_118,
 1, 114, :_reduce_none,
 4, 118, :_reduce_120,
 4, 118, :_reduce_121,
 4, 118, :_reduce_122,
 4, 118, :_reduce_123,
 4, 118, :_reduce_124,
 1, 65, :_reduce_125,
 3, 116, :_reduce_126,
 2, 116, :_reduce_127,
 1, 116, :_reduce_none,
 1, 119, :_reduce_none,
 2, 120, :_reduce_130,
 1, 115, :_reduce_none,
 3, 121, :_reduce_132,
 2, 121, :_reduce_133,
 2, 121, :_reduce_134,
 1, 121, :_reduce_135 ]

racc_reduce_n = 136

racc_shift_n = 227

racc_action_table = [
    26,    50,    71,    36,    71,    62,    12,   107,   113,   193,
   190,   178,    99,   179,   180,   137,   191,   106,    26,   108,
   109,    36,   111,   112,   203,   199,   138,    61,   139,    16,
    61,    61,   140,    61,    49,   168,    26,    39,    42,   176,
    13,    17,    20,    22,    27,    30,    33,    16,    37,   101,
   102,    64,    65,   105,    26,    39,    42,   176,    13,    17,
    20,    22,    27,    30,    33,    16,    37,    46,    47,   142,
    83,   144,   145,    39,    42,   146,    13,    17,    20,    22,
    27,    30,    33,    16,    37,    26,   147,    61,   132,   151,
   152,    39,    42,   104,    13,    17,    20,    22,    27,    30,
    33,   100,    37,    99,   168,    26,   121,   169,    36,   170,
     6,    83,    83,   116,    16,     6,    61,    97,    61,    92,
    88,    83,    39,    42,    68,    13,    17,    20,    22,    27,
    30,    33,    26,    37,    16,   132,    66,   186,    60,    59,
    58,   192,    39,    42,   135,    13,    17,    20,    22,    27,
    30,    33,    26,    37,    57,   176,    56,    16,    55,    52,
   116,    16,    51,   -72,   186,    48,   207,    45,   210,    39,
    42,   152,    13,    17,    20,    22,    27,    30,    33,   211,
    37,    16,    26,   168,   212,   132,    44,     6,   214,    39,
    42,     6,    13,    17,    20,    22,    27,    30,    33,   216,
    37,   217,    26,   121,    16,   176,    61,   168,     8,     7,
   116,    16,   224,   225,    61,   nil,   nil,   nil,   nil,    39,
    42,   nil,    13,    17,    20,    22,    27,    30,    33,    26,
    37,    16,    36,   nil,     6,   nil,   nil,   nil,   nil,    39,
    42,   nil,    13,    17,    20,    22,    27,    30,    33,   107,
    37,   nil,   nil,   nil,   nil,   nil,   nil,    26,    16,   106,
   132,   108,   109,   nil,   111,   112,    39,    42,   nil,    13,
    17,    20,    22,    27,    30,    33,   nil,    37,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   116,    16,    26,   nil,   nil,
   132,   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,
    22,    27,    30,    33,   nil,    37,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   116,    16,    26,   nil,   nil,
   132,   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,
    22,    27,    30,    33,   nil,    37,   nil,    26,   121,   nil,
   176,   nil,   nil,   nil,   nil,   116,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,
    22,    27,    30,    33,    26,    37,    16,   176,   nil,   nil,
   nil,   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,
    22,    27,    30,    33,    26,    37,   nil,   176,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    39,    42,   nil,    13,    17,    20,    22,    27,    30,
    33,    26,    37,    16,   176,   nil,   nil,   nil,   nil,   nil,
   nil,    39,    42,   nil,    13,    17,    20,    22,    27,    30,
    33,    26,    37,   nil,    36,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,
   nil,    13,    17,    20,    22,    27,    30,    33,    26,    37,
    16,    36,   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,
   nil,    13,    17,    20,    22,    27,    30,    33,    26,    37,
   nil,   176,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,    13,    17,
    20,    22,    27,    30,    33,    26,    37,    16,    36,   nil,
   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,    13,    17,
    20,    22,    27,    30,    33,    26,    37,   nil,   176,   nil,
   nil,   nil,   nil,   nil,    16,    26,   nil,   nil,    36,   nil,
   nil,   nil,    39,    42,   nil,    13,    17,    20,    22,    27,
    30,    33,   nil,    37,    16,    26,   nil,   nil,    36,   nil,
   nil,   nil,    39,    42,    16,    13,    17,    20,    22,    27,
    30,    33,   nil,    37,   nil,    13,    17,    20,    22,    27,
    30,    33,    26,    37,    16,    36,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    13,    17,    20,    22,    27,
    30,    33,    26,    37,   nil,    36,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,
    42,   nil,    13,    17,    20,    22,    27,    30,    33,    26,
    37,    16,    36,   nil,   nil,   nil,   nil,   nil,   nil,    39,
    42,   nil,    13,    17,    20,    22,    27,    30,    33,    26,
    37,   nil,    36,   nil,   nil,   nil,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,    13,
    17,    20,    22,    27,    30,    33,    26,    37,    16,    36,
   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,    13,
    17,    20,    22,    27,    30,    33,    26,    37,   nil,    36,
   nil,   nil,    80,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,    22,
    27,    30,    33,    26,    37,    16,   176,   nil,   nil,   nil,
   nil,   nil,   nil,    39,    42,   nil,    13,    17,    20,    22,
    27,    30,    33,    26,    37,   nil,   176,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    42,   nil,    13,    17,    20,    22,    27,    30,    33,
    26,    37,    16,    36,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    42,   nil,    13,    17,    20,    22,    27,    30,    33,
    26,    37,   nil,    36,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,
    13,    17,    20,    22,    27,    30,    33,   nil,    37,    16,
    26,   nil,   nil,   132,   nil,   nil,   nil,    39,    42,   nil,
    13,    17,    20,    22,    27,    30,    33,   nil,    37,   nil,
   nil,   121,   nil,   nil,   nil,   nil,   nil,   nil,   116,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,    42,   nil,
    13,    17,    20,    22,    27,    30,    33,   nil,    37,   156,
   158,   nil,   161,   163,   164,   nil,   nil,   nil,   nil,   154,
   155,   157,   159,   160,   162 ]

racc_action_check = [
     6,    15,    45,     6,   100,    32,     6,   173,    84,   167,
   164,   156,   166,   156,   156,    90,   164,   173,   216,   173,
   173,   216,   173,   173,   173,   173,    91,    32,    93,     6,
    84,    45,    95,   100,    15,   167,   214,     6,     6,   214,
     6,     6,     6,     6,     6,     6,     6,   216,     6,    74,
    74,    33,    33,    81,   207,   216,   216,   207,   216,   216,
   216,   216,   216,   216,   216,   214,   216,    11,    11,   106,
   107,   109,   110,   214,   214,   111,   214,   214,   214,   214,
   214,   214,   214,   207,   214,   203,   112,   113,   203,   116,
   120,   207,   207,    80,   207,   207,   207,   207,   207,   207,
   207,    72,   207,    67,   134,   186,   203,   135,   186,   136,
   186,   142,   145,   203,   203,   151,    66,    65,    62,    57,
    54,    52,   203,   203,    37,   203,   203,   203,   203,   203,
   203,   203,   121,   203,   186,   121,    34,   161,    30,    29,
    27,   165,   186,   186,    89,   186,   186,   186,   186,   186,
   186,   186,   180,   186,    26,   180,    22,   169,    20,    19,
   121,   121,    17,    16,   179,    13,   182,     8,   190,   121,
   121,   194,   121,   121,   121,   121,   121,   121,   121,   195,
   121,   180,   132,   198,   199,   132,     7,   132,   204,   180,
   180,     0,   180,   180,   180,   180,   180,   180,   180,   208,
   180,   209,   178,   132,   211,   178,   212,   213,     5,     2,
   132,   132,   219,   220,   225,   nil,   nil,   nil,   nil,   132,
   132,   nil,   132,   132,   132,   132,   132,   132,   132,   176,
   132,   178,   176,   nil,   176,   nil,   nil,   nil,   nil,   178,
   178,   nil,   178,   178,   178,   178,   178,   178,   178,    82,
   178,   nil,   nil,   nil,   nil,   nil,   nil,   152,   176,    82,
   152,    82,    82,   nil,    82,    82,   176,   176,   nil,   176,
   176,   176,   176,   176,   176,   176,   nil,   176,   152,   nil,
   nil,   nil,   nil,   nil,   nil,   152,   152,   170,   nil,   nil,
   170,   nil,   nil,   nil,   152,   152,   nil,   152,   152,   152,
   152,   152,   152,   152,   nil,   152,   nil,   nil,   170,   nil,
   nil,   nil,   nil,   nil,   nil,   170,   170,   168,   nil,   nil,
   168,   nil,   nil,   nil,   170,   170,   nil,   170,   170,   170,
   170,   170,   170,   170,   nil,   170,   nil,   154,   168,   nil,
   154,   nil,   nil,   nil,   nil,   168,   168,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   168,   168,   nil,   168,   168,   168,
   168,   168,   168,   168,   155,   168,   154,   155,   nil,   nil,
   nil,   nil,   nil,   nil,   154,   154,   nil,   154,   154,   154,
   154,   154,   154,   154,   163,   154,   nil,   163,   nil,   nil,
   nil,   nil,   nil,   155,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   155,   155,   nil,   155,   155,   155,   155,   155,   155,
   155,   162,   155,   163,   162,   nil,   nil,   nil,   nil,   nil,
   nil,   163,   163,   nil,   163,   163,   163,   163,   163,   163,
   163,    60,   163,   nil,    60,   nil,   nil,   nil,   nil,   nil,
   162,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   162,   162,
   nil,   162,   162,   162,   162,   162,   162,   162,    59,   162,
    60,    59,   nil,   nil,   nil,   nil,   nil,   nil,    60,    60,
   nil,    60,    60,    60,    60,    60,    60,    60,   160,    60,
   nil,   160,   nil,   nil,   nil,   nil,   nil,    59,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    59,    59,   nil,    59,    59,
    59,    59,    59,    59,    59,    36,    59,   160,    36,   nil,
   nil,   nil,   nil,   nil,   nil,   160,   160,   nil,   160,   160,
   160,   160,   160,   160,   160,   159,   160,   nil,   159,   nil,
   nil,   nil,   nil,   nil,    36,    39,   nil,   nil,    39,   nil,
   nil,   nil,    36,    36,   nil,    36,    36,    36,    36,    36,
    36,    36,   nil,    36,   159,    42,   nil,   nil,    42,   nil,
   nil,   nil,   159,   159,    39,   159,   159,   159,   159,   159,
   159,   159,   nil,   159,   nil,    39,    39,    39,    39,    39,
    39,    39,    58,    39,    42,    58,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    42,    42,    42,    42,    42,
    42,    42,    46,    42,   nil,    46,   nil,   nil,   nil,   nil,
   nil,    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    58,
    58,   nil,    58,    58,    58,    58,    58,    58,    58,    47,
    58,    46,    47,   nil,   nil,   nil,   nil,   nil,   nil,    46,
    46,   nil,    46,    46,    46,    46,    46,    46,    46,    49,
    46,   nil,    49,   nil,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    47,    47,   nil,    47,
    47,    47,    47,    47,    47,    47,    50,    47,    49,    50,
   nil,   nil,   nil,   nil,   nil,   nil,    49,    49,   nil,    49,
    49,    49,    49,    49,    49,    49,    51,    49,   nil,    51,
   nil,   nil,    51,   nil,   nil,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    50,    50,   nil,    50,    50,    50,    50,
    50,    50,    50,   158,    50,    51,   158,   nil,   nil,   nil,
   nil,   nil,   nil,    51,    51,   nil,    51,    51,    51,    51,
    51,    51,    51,   157,    51,   nil,   157,   nil,   nil,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   158,   158,   nil,   158,   158,   158,   158,   158,   158,   158,
    55,   158,   157,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   157,   157,   nil,   157,   157,   157,   157,   157,   157,   157,
    56,   157,   nil,    56,   nil,   nil,   nil,   nil,   nil,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    55,    55,   nil,
    55,    55,    55,    55,    55,    55,    55,   nil,    55,    56,
    88,   nil,   nil,    88,   nil,   nil,   nil,    56,    56,   nil,
    56,    56,    56,    56,    56,    56,    56,   nil,    56,   nil,
   nil,    88,   nil,   nil,   nil,   nil,   nil,   nil,    88,    88,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,    88,   nil,
    88,    88,    88,    88,    88,    88,    88,   nil,    88,   129,
   129,   nil,   129,   129,   129,   nil,   nil,   nil,   nil,   129,
   129,   129,   129,   129,   129 ]

racc_action_pointer = [
   181,   nil,   209,   nil,   nil,   206,    -5,   186,   164,   nil,
   nil,    25,   nil,   160,   nil,   -10,   118,   154,   nil,   146,
   150,   nil,   148,   nil,   nil,   nil,   109,   132,   nil,   135,
   130,   nil,    -7,     0,    91,   nil,   500,    70,   nil,   530,
   nil,   nil,   550,   nil,   nil,    -3,   597,   624,   nil,   644,
   671,   691,    87,   nil,    97,   765,   785,   114,   577,   453,
   426,   nil,    84,   nil,   nil,    66,    82,    94,   nil,   nil,
   nil,   nil,    97,   nil,    43,   nil,   nil,   nil,   nil,   nil,
    84,    44,   245,   nil,    -4,   nil,   nil,   nil,   815,   120,
     6,    17,   nil,    19,   nil,    23,   nil,   nil,   nil,   nil,
    -1,   nil,   nil,   nil,   nil,   nil,    54,    36,   nil,    53,
    57,    57,    68,    53,   nil,   nil,    81,   nil,   nil,   nil,
    62,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   843,
   nil,   nil,   177,   nil,    69,   104,    84,   nil,   nil,   nil,
   nil,   nil,    77,   nil,   nil,    78,   nil,   nil,   nil,   nil,
   nil,   105,   252,   nil,   332,   359,   -16,   738,   718,   520,
   473,   129,   406,   379,   -16,   132,     3,     0,   312,   123,
   282,   nil,   nil,     3,   nil,   nil,   224,   nil,   197,   156,
   147,   nil,   138,   nil,   nil,   nil,   100,   nil,   nil,   nil,
   136,   nil,   nil,   nil,   143,   175,   nil,   nil,   148,   176,
   nil,   nil,   nil,    80,   160,   nil,   nil,    49,   195,   192,
   nil,   170,   172,   172,    31,   nil,    13,   nil,   nil,   203,
   209,   nil,   nil,   nil,   nil,   180,   nil ]

racc_action_default = [
  -136,   -15,  -136,    -1,    -2,    -4,  -136,  -136,  -136,    -3,
  -131,  -102,   -18,  -136,  -117,  -105,  -125,  -136,  -108,   -17,
  -136,  -109,  -136,  -111,  -110,   -19,  -135,  -136,  -113,   -21,
  -136,  -114,   -24,  -136,  -136,  -119,  -136,  -136,  -128,  -136,
  -129,  -116,  -136,   -99,   227,  -136,  -136,  -136,  -134,  -136,
  -136,  -136,  -136,   -16,   -49,  -136,  -136,  -133,  -136,  -136,
  -136,  -125,  -136,   -23,  -127,  -136,  -136,  -136,  -130,  -106,
  -107,   -10,    -5,    -7,   -11,    -9,  -100,  -101,  -104,  -103,
  -136,  -136,   -26,   -72,   -29,   -30,   -32,   -33,  -136,   -51,
  -136,  -136,  -132,  -136,   -20,  -136,   -22,  -126,  -115,  -112,
  -136,   -12,   -13,    -8,  -118,  -120,  -136,  -136,   -37,   -39,
  -136,   -41,   -42,  -136,   -28,   -87,  -136,   -58,   -88,   -89,
   -75,  -136,   -77,   -97,   -80,   -98,   -85,   -81,   -82,  -136,
   -86,   -84,  -136,   -96,   -50,  -136,   -56,  -121,  -122,  -123,
  -124,    -6,  -136,   -34,   -38,  -136,   -40,   -43,   -27,   -31,
   -71,  -136,  -136,   -79,  -136,  -136,  -136,  -136,  -136,  -136,
  -136,  -136,  -136,  -136,  -136,  -136,   -98,  -136,  -136,  -136,
  -136,   -25,   -35,  -136,   -78,   -90,  -136,   -91,  -136,  -136,
  -136,   -92,  -136,   -93,   -94,   -63,  -136,   -62,   -95,   -68,
  -136,   -70,   -14,   -83,   -76,   -52,   -54,   -55,   -57,  -136,
   -36,   -44,   -45,  -136,  -136,   -61,   -67,  -136,   -66,  -136,
   -69,  -136,  -136,   -46,  -136,   -60,  -136,   -64,   -53,  -136,
   -48,   -74,   -59,   -65,   -47,  -136,   -73 ]

racc_goto_table = [
    32,    82,    84,    63,   134,    73,   149,   187,    25,   209,
    69,    76,    77,    70,   175,   177,    75,   181,   182,   183,
   184,   197,   188,   189,   196,   205,    78,    79,   220,   171,
    67,    53,    19,    96,   150,   200,   201,    98,   204,   223,
   206,   202,   103,   219,   136,    81,   195,    72,   167,    90,
    91,   149,    93,    32,    95,   114,     9,   143,     5,     4,
   141,    94,     3,   197,   194,   174,   218,   215,   153,   149,
    54,    75,    89,     2,   222,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   148,   nil,   198,   nil,   nil,   nil,
   nil,   nil,   172,   nil,   173,    84,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   213,
   nil,   nil,   nil,   nil,   nil,   nil,   166,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    67,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   208,   nil,   nil,   221,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   226,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   208 ]

racc_goto_check = [
    17,    22,    23,    10,    32,     7,    11,    42,    15,    43,
    57,    54,    54,    57,    40,    40,    10,    40,    40,    40,
    40,    37,    40,    40,    36,    42,    55,    55,    34,    21,
    17,    14,    13,    10,    25,    29,    30,    10,    40,    43,
    40,    31,     9,    33,    20,    17,    35,     6,    32,    17,
    17,    11,    17,    17,    17,    10,     5,    23,     4,     3,
     7,    15,     2,    37,    47,    48,    36,    40,    49,    11,
    18,    10,    19,     1,    40,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,   nil,    32,   nil,   nil,   nil,
   nil,   nil,    23,   nil,    22,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17 ]

racc_goto_pointer = [
   nil,    73,    62,    59,    58,    51,     2,   -40,   nil,   -32,
   -29,  -110,   nil,    26,    12,     2,   nil,    -6,    51,    18,
   -45,  -107,   -51,   -50,   nil,   -82,   nil,   nil,   nil,  -138,
  -137,  -132,   -84,  -169,  -184,  -123,  -145,  -148,   nil,   nil,
  -140,   nil,  -154,  -177,   nil,   nil,   nil,  -104,   -87,   -53,
   nil,   nil,   nil,   nil,   -35,   -23,   nil,   -29,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   165,   nil,   nil,   nil,    74,   nil,
    41,   117,     1,   nil,   nil,   nil,    29,   125,   nil,   nil,
   nil,   nil,   nil,    14,    85,   185,    86,    87,   110,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   123,   126,
   129,   130,   nil,   nil,   115,   118,   119,   120,   122,   124,
   127,   128,   131,   133,    43,    11,    15,    18,    21,    23,
    28,    31,    34,    35,    38,    40,    10 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :ORDER => 2,
 :BY => 3,
 :comma => 4,
 :unsigned_integer => 5,
 :ASC => 6,
 :DESC => 7,
 :left_paren => 8,
 :right_paren => 9,
 :SELECT => 10,
 :asterisk => 11,
 :AS => 12,
 :FROM => 13,
 :CROSS => 14,
 :JOIN => 15,
 :INNER => 16,
 :LEFT => 17,
 :OUTER => 18,
 :RIGHT => 19,
 :FULL => 20,
 :ON => 21,
 :USING => 22,
 :WHERE => 23,
 :GROUP => 24,
 :HAVING => 25,
 :NOT => 26,
 :BETWEEN => 27,
 :AND => 28,
 :IN => 29,
 :LIKE => 30,
 :IS => 31,
 :NULL => 32,
 :EXISTS => 33,
 :identifier => 34,
 :OR => 35,
 :equals_operator => 36,
 :not_equals_operator => 37,
 :less_than_operator => 38,
 :greater_than_operator => 39,
 :less_than_or_equals_operator => 40,
 :greater_than_or_equals_operator => 41,
 :plus_sign => 42,
 :minus_sign => 43,
 :solidus => 44,
 :period => 45,
 :COUNT => 46,
 :AVG => 47,
 :MAX => 48,
 :MIN => 49,
 :SUM => 50,
 :quote => 51,
 :character_string_literal => 52,
 :DATE => 53,
 :date_string => 54 }

racc_use_result_var = true

racc_nt_base = 55

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'ORDER',
'BY',
'comma',
'unsigned_integer',
'ASC',
'DESC',
'left_paren',
'right_paren',
'SELECT',
'asterisk',
'AS',
'FROM',
'CROSS',
'JOIN',
'INNER',
'LEFT',
'OUTER',
'RIGHT',
'FULL',
'ON',
'USING',
'WHERE',
'GROUP',
'HAVING',
'NOT',
'BETWEEN',
'AND',
'IN',
'LIKE',
'IS',
'NULL',
'EXISTS',
'identifier',
'OR',
'equals_operator',
'not_equals_operator',
'less_than_operator',
'greater_than_operator',
'less_than_or_equals_operator',
'greater_than_or_equals_operator',
'plus_sign',
'minus_sign',
'solidus',
'period',
'COUNT',
'AVG',
'MAX',
'MIN',
'SUM',
'quote',
'character_string_literal',
'DATE',
'date_string',
'$start',
'direct_sql_statement',
'direct_sql_data_statement',
'direct_select_statement_multiple_rows',
'query_expression',
'order_by_clause',
'sort_specification_list',
'sort_specification',
'sort_key',
'ordering_specification',
'column_name',
'subquery',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'from_clause',
'where_clause',
'group_by_clause',
'having_clause',
'table_reference',
'table_name',
'joined_table',
'table_subquery',
'cross_join',
'qualified_join',
'join_type',
'join_specification',
'join_condition',
'named_columns_join',
'search_condition',
'join_column_list',
'column_name_list',
'grouping_column_reference_list',
'grouping_column_reference',
'column_reference',
'row_subquery',
'between_predicate',
'row_value_constructor',
'in_predicate',
'in_predicate_value',
'in_value_list',
'like_predicate',
'null_predicate',
'exists_predicate',
'boolean_term',
'boolean_factor',
'boolean_test',
'boolean_primary',
'predicate',
'comparison_predicate',
'row_value_constructor_element',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'set_function_specification',
'unsigned_numeric_literal',
'general_literal',
'qualifier',
'general_set_function',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_3( val, _values, result )
 result = SQL::Statement::DirectSelect.new(val[0], val[1])
   result
  end
.,.,

 # reduce 4 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 16
  def _reduce_5( val, _values, result )
 result = SQL::Statement::OrderBy.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 19
  def _reduce_6( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 7 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 23
  def _reduce_8( val, _values, result )
 result = val[1].new(val[0])
   result
  end
.,.,

 # reduce 9 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 27
  def _reduce_10( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 30
  def _reduce_11( val, _values, result )
 result = SQL::Statement::Ascending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 31
  def _reduce_12( val, _values, result )
 result = SQL::Statement::Ascending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 32
  def _reduce_13( val, _values, result )
 result = SQL::Statement::Descending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 37
  def _reduce_14( val, _values, result )
 result = SQL::Statement::Subquery.new(val[1])
   result
  end
.,.,

 # reduce 15 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 43
  def _reduce_16( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_17( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 47
  def _reduce_18( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 48
  def _reduce_19( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 51
  def _reduce_20( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_22( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 56
  def _reduce_23( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[1])
   result
  end
.,.,

 # reduce 24 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 60
  def _reduce_25( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 63
  def _reduce_26( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 66
  def _reduce_27( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 67
  def _reduce_28( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[1])
   result
  end
.,.,

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

 # reduce 33 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 79
  def _reduce_34( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 80
  def _reduce_35( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 83
  def _reduce_36( val, _values, result )
 result = val[1].new(val[0], val[3], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 86
  def _reduce_37( val, _values, result )
 result = SQL::Statement::InnerJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 87
  def _reduce_38( val, _values, result )
 result = SQL::Statement::LeftOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 88
  def _reduce_39( val, _values, result )
 result = SQL::Statement::LeftJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 89
  def _reduce_40( val, _values, result )
 result = SQL::Statement::RightOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 90
  def _reduce_41( val, _values, result )
 result = SQL::Statement::RightJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 91
  def _reduce_42( val, _values, result )
 result = SQL::Statement::FullJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 92
  def _reduce_43( val, _values, result )
 result = SQL::Statement::FullOuterJoin
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 99
  def _reduce_46( val, _values, result )
 result = SQL::Statement::On.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 102
  def _reduce_47( val, _values, result )
 result = SQL::Statement::Using.new(val[2])
   result
  end
.,.,

 # reduce 48 omitted

 # reduce 49 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 109
  def _reduce_50( val, _values, result )
 result = SQL::Statement::WhereClause.new(val[1])
   result
  end
.,.,

 # reduce 51 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 113
  def _reduce_52( val, _values, result )
 result = SQL::Statement::GroupByClause.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 116
  def _reduce_53( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 124
  def _reduce_57( val, _values, result )
 result = SQL::Statement::HavingClause.new(val[1])
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 131
  def _reduce_59( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Between.new(val[0], val[3], val[5]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 132
  def _reduce_60( val, _values, result )
 result = SQL::Statement::Between.new(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 135
  def _reduce_61( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::In.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 136
  def _reduce_62( val, _values, result )
 result = SQL::Statement::In.new(val[0], val[2])
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 140
  def _reduce_64( val, _values, result )
 result = SQL::Statement::InValueList.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 143
  def _reduce_65( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 66 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 150
  def _reduce_67( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Like.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 151
  def _reduce_68( val, _values, result )
 result = SQL::Statement::Like.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 154
  def _reduce_69( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Is.new(val[0], SQL::Statement::Null.new))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 155
  def _reduce_70( val, _values, result )
 result = SQL::Statement::Is.new(val[0], SQL::Statement::Null.new)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 158
  def _reduce_71( val, _values, result )
 result = SQL::Statement::Exists.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 162
  def _reduce_72( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 165
  def _reduce_73( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 171
  def _reduce_76( val, _values, result )
 result = SQL::Statement::Or.new(val[0], val[2])
   result
  end
.,.,

 # reduce 77 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 175
  def _reduce_78( val, _values, result )
 result = SQL::Statement::And.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 178
  def _reduce_79( val, _values, result )
 result = SQL::Statement::Not.new(val[1])
   result
  end
.,.,

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 186
  def _reduce_83( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 197
  def _reduce_90( val, _values, result )
 result = SQL::Statement::Equals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 198
  def _reduce_91( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Equals.new(val[0], val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 199
  def _reduce_92( val, _values, result )
 result = SQL::Statement::Less.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 200
  def _reduce_93( val, _values, result )
 result = SQL::Statement::Greater.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 201
  def _reduce_94( val, _values, result )
 result = SQL::Statement::LessOrEquals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 202
  def _reduce_95( val, _values, result )
 result = SQL::Statement::GreaterOrEquals.new(val[0], val[2])
   result
  end
.,.,

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 215
  def _reduce_100( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 216
  def _reduce_101( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 102 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 220
  def _reduce_103( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 221
  def _reduce_104( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 105 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 225
  def _reduce_106( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 226
  def _reduce_107( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 108 omitted

 # reduce 109 omitted

 # reduce 110 omitted

 # reduce 111 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 233
  def _reduce_112( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 113 omitted

 # reduce 114 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 240
  def _reduce_115( val, _values, result )
 result = SQL::Statement::QualifiedColumn.new(val[0], val[2])
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 247
  def _reduce_118( val, _values, result )
 result = SQL::Statement::Count.new(SQL::Statement::All.new)
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 251
  def _reduce_120( val, _values, result )
 result = SQL::Statement::Count.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 252
  def _reduce_121( val, _values, result )
 result = SQL::Statement::Average.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 253
  def _reduce_122( val, _values, result )
 result = SQL::Statement::Maximum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 254
  def _reduce_123( val, _values, result )
 result = SQL::Statement::Minimum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 255
  def _reduce_124( val, _values, result )
 result = SQL::Statement::Sum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 259
  def _reduce_125( val, _values, result )
 result = SQL::Statement::Column.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 263
  def _reduce_126( val, _values, result )
 result = SQL::Statement::String.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 264
  def _reduce_127( val, _values, result )
 result = SQL::Statement::String.new('')
   result
  end
.,.,

 # reduce 128 omitted

 # reduce 129 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 271
  def _reduce_130( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 277
  def _reduce_132( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 278
  def _reduce_133( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 279
  def _reduce_134( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 280
  def _reduce_135( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..idb5e1469d51', 'lib/sql/parser.racc', 141

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..idb5e1469d51

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 3, 30, :_reduce_1,
 2, 30, :_reduce_2,
 1, 31, :_reduce_3,
 1, 31, :_reduce_4,
 3, 33, :_reduce_5,
 1, 33, :_reduce_none,
 3, 34, :_reduce_7,
 1, 34, :_reduce_none,
 2, 32, :_reduce_9,
 1, 32, :_reduce_10,
 2, 37, :_reduce_11,
 1, 39, :_reduce_12,
 2, 38, :_reduce_13,
 1, 42, :_reduce_14,
 1, 42, :_reduce_15,
 1, 42, :_reduce_16,
 1, 42, :_reduce_17,
 1, 42, :_reduce_18,
 1, 42, :_reduce_19,
 6, 43, :_reduce_20,
 5, 43, :_reduce_21,
 4, 45, :_reduce_22,
 3, 45, :_reduce_23,
 3, 46, :_reduce_24,
 3, 47, :_reduce_25,
 1, 47, :_reduce_none,
 1, 40, :_reduce_none,
 1, 41, :_reduce_none,
 1, 48, :_reduce_none,
 1, 48, :_reduce_none,
 1, 48, :_reduce_none,
 3, 49, :_reduce_32,
 1, 44, :_reduce_none,
 1, 50, :_reduce_none,
 1, 35, :_reduce_none,
 3, 51, :_reduce_36,
 3, 51, :_reduce_37,
 1, 51, :_reduce_none,
 3, 52, :_reduce_39,
 3, 52, :_reduce_40,
 1, 52, :_reduce_none,
 2, 53, :_reduce_42,
 2, 53, :_reduce_43,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 3, 54, :_reduce_47,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 56, :_reduce_50,
 1, 36, :_reduce_none,
 1, 58, :_reduce_52,
 1, 58, :_reduce_none,
 1, 59, :_reduce_none,
 2, 60, :_reduce_55,
 1, 57, :_reduce_none,
 3, 61, :_reduce_57,
 2, 61, :_reduce_58,
 2, 61, :_reduce_59,
 1, 61, :_reduce_60 ]

racc_reduce_n = 61

racc_shift_n = 93

racc_action_table = [
    14,    80,    20,    39,    23,    27,     4,    41,     8,    11,
    54,    16,    18,    57,    76,    20,    77,    23,    27,     4,
    48,     8,    11,    38,    16,    18,    20,    23,    23,    37,
    36,    47,     8,    11,    34,    16,    18,    20,    44,    23,
    27,     4,    33,     8,    11,    32,    16,    18,    20,    80,
    23,    27,     4,    84,     8,    11,    31,    16,    18,    20,
    87,    23,    27,     4,    30,     8,    11,    89,    16,    18,
    20,    90,    23,    27,     4,    28,     8,    11,     1,    16,
    18,    20,   nil,    23,    27,     4,   nil,     8,    11,   nil,
    16,    18,    20,   nil,    23,    27,     4,   nil,     8,    11,
   nil,    16,    18,    20,   nil,    23,    27,     4,   nil,     8,
    11,   nil,    16,    18,    20,   nil,    23,    27,     4,   nil,
     8,    11,   nil,    16,    18,    20,   nil,    23,    27,     4,
   nil,     8,    11,   nil,    16,    18,    20,   nil,    23,   nil,
   nil,   nil,     8,    11,   nil,    16,    18,    20,   nil,    23,
    27,     4,   nil,     8,    11,   nil,    16,    18,    20,   nil,
    23,    27,     4,   nil,     8,    11,   nil,    16,    18,    20,
   nil,    23,    27,     4,   nil,     8,    11,   nil,    16,    18,
    20,   nil,    23,    27,     4,   nil,     8,    11,   nil,    16,
    18,    72,    74,    75,    66,    67,    68,    69,    70,   nil,
    71 ]

racc_action_check = [
     1,    71,    70,    24,    70,    70,    70,    25,    70,    70,
    40,    70,    70,    41,    69,     1,    69,     1,     1,     1,
    35,     1,     1,    24,     1,     1,     4,    31,     4,    22,
    22,    33,     4,     4,    18,     4,     4,    84,    28,    84,
    84,    84,    16,    84,    84,    11,    84,    84,    80,    77,
    80,    80,    80,    78,    80,    80,    10,    80,    80,    76,
    82,    76,    76,    76,     7,    76,    76,    85,    76,    76,
    73,    86,    73,    73,    73,     2,    73,    73,     0,    73,
    73,    87,   nil,    87,    87,    87,   nil,    87,    87,   nil,
    87,    87,    20,   nil,    20,    20,    20,   nil,    20,    20,
   nil,    20,    20,    54,   nil,    54,    54,    54,   nil,    54,
    54,   nil,    54,    54,    89,   nil,    89,    89,    89,   nil,
    89,    89,   nil,    89,    89,    39,   nil,    39,    39,    39,
   nil,    39,    39,   nil,    39,    39,    27,   nil,    27,   nil,
   nil,   nil,    27,    27,   nil,    27,    27,    38,   nil,    38,
    38,    38,   nil,    38,    38,   nil,    38,    38,    30,   nil,
    30,    30,    30,   nil,    30,    30,   nil,    30,    30,    36,
   nil,    36,    36,    36,   nil,    36,    36,   nil,    36,    36,
    37,   nil,    37,    37,    37,   nil,    37,    37,   nil,    37,
    37,    58,    58,    58,    58,    58,    58,    58,    58,   nil,
    58 ]

racc_action_pointer = [
    76,    -3,    75,   nil,     8,   nil,   nil,    60,   nil,   nil,
    51,    19,   nil,   nil,   nil,   nil,    14,   nil,     7,   nil,
    74,   nil,     8,   nil,     0,     1,   nil,   118,    38,   nil,
   140,     7,   nil,     4,   nil,     1,   151,   162,   129,   107,
     3,    -7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    85,   nil,   nil,   nil,   183,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -1,
   -16,   -17,   nil,    52,   nil,   nil,    41,    31,    37,   nil,
    30,   nil,    44,   nil,    19,    63,    52,    63,   nil,    96,
   nil,   nil,   nil ]

racc_action_default = [
   -61,   -61,   -61,   -45,   -61,    -4,   -46,    -6,   -52,   -48,
    -8,   -61,   -50,   -49,    -3,   -53,   -60,   -54,   -61,   -56,
   -61,   -35,   -38,   -51,   -41,    -2,   -44,   -61,   -61,   -43,
   -61,   -61,   -55,   -58,   -59,   -61,   -61,   -61,   -61,   -61,
   -10,   -61,    -1,   -42,    93,    -5,    -7,   -57,   -47,   -37,
   -36,   -40,   -39,    -9,   -61,   -11,   -12,   -27,   -61,   -31,
   -34,   -28,   -29,   -33,   -13,   -30,   -17,   -18,   -19,   -61,
   -61,   -61,   -14,   -61,   -15,   -16,   -61,   -61,   -61,   -23,
   -61,   -32,   -61,   -22,   -61,   -26,   -61,   -61,   -21,   -61,
   -24,   -20,   -25 ]

racc_goto_table = [
    10,    58,    29,     5,    86,    79,    51,    52,    49,    50,
    73,    83,    56,    92,    64,    55,    65,    78,    53,    35,
    81,    59,    40,    82,    46,    43,    61,    62,    42,    10,
    25,    88,    45,     2,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    85,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    85 ]

racc_goto_check = [
     6,    15,    25,     4,    18,    17,    23,    23,    22,    22,
    13,    17,    11,    18,    12,    10,    14,    15,     9,     6,
    15,    16,     8,    15,     7,    25,    19,    20,     3,     6,
     2,    15,     4,     1,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    33,    29,     3,     2,   nil,    -1,    -7,    -3,   -22,
   -26,   -29,   -40,   -48,   -38,   -53,   -33,   -66,   -76,   -28,
   -27,   nil,   -28,   -32,   nil,    -2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     7,    60,    12,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    63,    21,    22,    24,    26,     3,     6,     9,    13,
    15,    17,    19 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :asterisk => 3,
 :comma => 4,
 :AS => 5,
 :FROM => 6,
 :WHERE => 7,
 :equals_operator => 8,
 :not_equals_operator => 9,
 :less_than_operator => 10,
 :greater_than_operator => 11,
 :less_than_or_equals_operator => 12,
 :greater_than_or_equals_operator => 13,
 :NOT => 14,
 :BETWEEN => 15,
 :AND => 16,
 :IN => 17,
 :left_paren => 18,
 :right_paren => 19,
 :identifier => 20,
 :plus_sign => 21,
 :minus_sign => 22,
 :solidus => 23,
 :character_string_literal => 24,
 :DATE => 25,
 :date_string => 26,
 :unsigned_integer => 27,
 :period => 28 }

racc_use_result_var = true

racc_nt_base = 29

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'asterisk',
'comma',
'AS',
'FROM',
'WHERE',
'equals_operator',
'not_equals_operator',
'less_than_operator',
'greater_than_operator',
'less_than_or_equals_operator',
'greater_than_or_equals_operator',
'NOT',
'BETWEEN',
'AND',
'IN',
'left_paren',
'right_paren',
'identifier',
'plus_sign',
'minus_sign',
'solidus',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'period',
'$start',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'column_name',
'from_clause',
'where_clause',
'table_reference',
'table_name',
'search_condition',
'comp_op',
'between_predicate',
'row_value_constructor',
'in_predicate',
'in_predicate_value',
'in_value_list',
'predicate',
'comparison_predicate',
'row_value_constructor_element',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'column_reference',
'unsigned_numeric_literal',
'general_literal',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 7
  def _reduce_2( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 10
  def _reduce_3( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_4( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 14
  def _reduce_5( val, _values, result )
 result = [val[0]] + Array(val[2])
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 18
  def _reduce_7( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

 # reduce 8 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 22
  def _reduce_9( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 23
  def _reduce_10( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 26
  def _reduce_11( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 29
  def _reduce_12( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 32
  def _reduce_13( val, _values, result )
 result = SQL::Statement::WhereClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 36
  def _reduce_14( val, _values, result )
 result = SQL::Statement::Equals
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 37
  def _reduce_15( val, _values, result )
 result = SQL::Statement::NotEquals
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 38
  def _reduce_16( val, _values, result )
 result = SQL::Statement::Less
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 39
  def _reduce_17( val, _values, result )
 result = SQL::Statement::Greater
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 40
  def _reduce_18( val, _values, result )
 result = SQL::Statement::LessOrEquals
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 41
  def _reduce_19( val, _values, result )
 result = SQL::Statement::GreaterOrEquals
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_20( val, _values, result )
 result = SQL::Statement::NotBetween.new(val[0], val[3], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 45
  def _reduce_21( val, _values, result )
 result = SQL::Statement::Between.new(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 48
  def _reduce_22( val, _values, result )
 result = SQL::Statement::NotIn.new(val[0], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 49
  def _reduce_23( val, _values, result )
 result = SQL::Statement::In.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 52
  def _reduce_24( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_25( val, _values, result )
 result = [val[0]] + Array(val[2])
   result
  end
.,.,

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 74
  def _reduce_32( val, _values, result )
 result = val[1].new(val[0], val[2])
   result
  end
.,.,

 # reduce 33 omitted

 # reduce 34 omitted

 # reduce 35 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 86
  def _reduce_36( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 87
  def _reduce_37( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 38 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 91
  def _reduce_39( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 92
  def _reduce_40( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 41 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 96
  def _reduce_42( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 97
  def _reduce_43( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 103
  def _reduce_47( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 48 omitted

 # reduce 49 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 110
  def _reduce_50( val, _values, result )
 result = SQL::Statement::Column.new(val[0])
   result
  end
.,.,

 # reduce 51 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 118
  def _reduce_52( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 53 omitted

 # reduce 54 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 125
  def _reduce_55( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 131
  def _reduce_57( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 132
  def _reduce_58( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 133
  def _reduce_59( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 134
  def _reduce_60( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

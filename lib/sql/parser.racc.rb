#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..id89c9403e08', 'lib/sql/parser.racc', 221

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..id89c9403e08

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 3, 49, :_reduce_1,
 2, 49, :_reduce_2,
 1, 50, :_reduce_3,
 1, 50, :_reduce_4,
 3, 52, :_reduce_5,
 1, 52, :_reduce_none,
 3, 53, :_reduce_7,
 1, 53, :_reduce_none,
 4, 51, :_reduce_9,
 2, 56, :_reduce_10,
 1, 60, :_reduce_11,
 1, 60, :_reduce_none,
 1, 62, :_reduce_none,
 1, 62, :_reduce_none,
 3, 63, :_reduce_15,
 4, 63, :_reduce_16,
 5, 64, :_reduce_17,
 1, 65, :_reduce_18,
 2, 65, :_reduce_19,
 1, 65, :_reduce_20,
 2, 65, :_reduce_21,
 1, 65, :_reduce_22,
 1, 66, :_reduce_none,
 2, 67, :_reduce_24,
 0, 57, :_reduce_none,
 2, 57, :_reduce_26,
 0, 58, :_reduce_none,
 3, 58, :_reduce_28,
 3, 69, :_reduce_29,
 1, 69, :_reduce_none,
 1, 70, :_reduce_none,
 0, 59, :_reduce_none,
 2, 59, :_reduce_33,
 6, 72, :_reduce_34,
 5, 72, :_reduce_35,
 4, 74, :_reduce_36,
 3, 74, :_reduce_37,
 3, 75, :_reduce_38,
 3, 76, :_reduce_39,
 1, 76, :_reduce_none,
 4, 77, :_reduce_41,
 3, 77, :_reduce_42,
 4, 78, :_reduce_43,
 3, 78, :_reduce_44,
 1, 61, :_reduce_none,
 1, 68, :_reduce_none,
 3, 68, :_reduce_47,
 1, 79, :_reduce_none,
 3, 79, :_reduce_49,
 2, 80, :_reduce_50,
 1, 80, :_reduce_none,
 1, 81, :_reduce_none,
 1, 82, :_reduce_none,
 3, 82, :_reduce_54,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 3, 84, :_reduce_60,
 3, 84, :_reduce_61,
 3, 84, :_reduce_62,
 3, 84, :_reduce_63,
 3, 84, :_reduce_64,
 3, 84, :_reduce_65,
 1, 73, :_reduce_none,
 1, 85, :_reduce_none,
 1, 54, :_reduce_none,
 3, 86, :_reduce_69,
 3, 86, :_reduce_70,
 1, 86, :_reduce_none,
 3, 87, :_reduce_72,
 3, 87, :_reduce_73,
 1, 87, :_reduce_none,
 2, 88, :_reduce_75,
 2, 88, :_reduce_76,
 1, 88, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 3, 89, :_reduce_81,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 3, 71, :_reduce_84,
 1, 71, :_reduce_85,
 1, 94, :_reduce_none,
 4, 91, :_reduce_87,
 1, 91, :_reduce_none,
 4, 95, :_reduce_89,
 4, 95, :_reduce_90,
 4, 95, :_reduce_91,
 4, 95, :_reduce_92,
 4, 95, :_reduce_93,
 1, 55, :_reduce_none,
 1, 93, :_reduce_95,
 1, 93, :_reduce_none,
 1, 96, :_reduce_none,
 2, 97, :_reduce_98,
 1, 92, :_reduce_none,
 3, 98, :_reduce_100,
 2, 98, :_reduce_101,
 2, 98, :_reduce_102,
 1, 98, :_reduce_103 ]

racc_reduce_n = 104

racc_shift_n = 181

racc_action_table = [
    64,   127,   129,   149,   132,   142,     1,   124,   125,    39,
   120,   148,   126,   128,   130,   131,   122,   123,   152,     5,
   153,   111,   105,   151,    19,   106,    14,   107,   108,   112,
   104,   172,    10,    13,   113,    16,    20,    24,    27,    30,
    34,     3,     7,    40,    11,     5,   105,    56,    57,   106,
    19,   107,   108,   115,   104,   116,    87,   119,    10,    13,
   120,    16,    20,    24,    27,    30,    34,     3,     7,    99,
    11,    85,    84,    89,   133,    70,   135,   136,    19,   137,
    67,    19,    70,    60,    69,    67,    10,    13,    63,    16,
    20,    24,    27,    30,    34,     3,     7,    99,    11,   110,
    60,    89,    59,    58,    55,    54,    19,    53,    52,    51,
   158,    70,    70,   120,    10,    13,   162,    16,    20,    24,
    27,    30,    34,     3,     7,    99,    11,   119,   163,    89,
    49,    47,   158,   167,    19,    46,   -45,    19,   174,    45,
   176,   177,    10,    13,    43,    16,    20,    24,    27,    30,
    34,     3,     7,    99,    11,    41,    37,    89,   120,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,    99,    11,   nil,   nil,    89,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,    99,
    11,   nil,   nil,    89,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,     5,    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,    13,   nil,    16,    20,    24,
    27,    30,    34,     3,     7,     5,    11,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,     5,
    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    13,   nil,    16,    20,    24,    27,    30,
    34,     3,     7,     5,    11,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,     5,    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,    13,   nil,    16,    20,    24,
    27,    30,    34,     3,     7,     5,    11,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,     5,
    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,     5,
   nil,   nil,    10,    13,    19,    16,    20,    24,    27,    30,
    34,     3,     7,   nil,    11,    16,    20,    24,    27,    30,
    34,     3,     7,     5,    11,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,    89,    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,    13,   nil,    16,    20,    24,
    27,    30,    34,     3,     7,     5,    11,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,     5,
    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    13,   nil,    16,    20,    24,    27,    30,
    34,     3,     7,     5,    11,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,     5,    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,    13,   nil,    16,    20,    24,
    27,    30,    34,     3,     7,     5,    11,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,     5,
    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    13,   nil,    16,    20,    24,    27,    30,
    34,     3,     7,     5,    11,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,     5,    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,    13,   nil,    16,    20,    24,
    27,    30,    34,     3,     7,     5,    11,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,
   nil,    16,    20,    24,    27,    30,    34,     3,     7,     5,
    11,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    13,   nil,    16,    20,    24,    27,    30,
    34,     3,     7,     5,    11,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,   nil,    16,
    20,    24,    27,    30,    34,     3,     7,     5,    11,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    10,    13,   nil,    16,    20,    24,    27,    30,    34,     3,
     7,   nil,    11 ]

racc_action_check = [
    46,   100,   100,   125,   100,   117,     0,   100,   100,     6,
   117,   125,   100,   100,   100,   100,   100,   100,   127,    46,
   127,    77,   161,   127,    46,   161,     1,   161,   161,    78,
   161,   161,    46,    46,    80,    46,    46,    46,    46,    46,
    46,    46,    46,     6,    46,     1,    71,    35,    35,    71,
     1,    71,    71,    86,    71,    87,    68,    91,     1,     1,
    92,     1,     1,     1,     1,     1,     1,     1,     1,   115,
     1,    65,    64,   115,   104,   105,   106,   108,   115,   109,
    58,   116,    49,   118,    48,    47,   115,   115,    43,   115,
   115,   115,   115,   115,   115,   115,   115,   120,   115,    76,
    38,   120,    37,    36,    34,    32,   120,    30,    27,    24,
   132,   135,   137,   138,   120,   120,   139,   120,   120,   120,
   120,   120,   120,   120,   120,   119,   120,   144,   149,   119,
    23,    22,   153,   155,   119,    20,    19,   162,   165,    16,
   168,   169,   119,   119,    11,   119,   119,   119,   119,   119,
   119,   119,   119,    69,   119,     7,     2,    69,   178,   nil,
   nil,   nil,    69,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    69,    69,   nil,    69,    69,    69,    69,    69,    69,    69,
    69,   172,    69,   nil,   nil,   172,   nil,   nil,   nil,   nil,
   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   172,   172,
   nil,   172,   172,   172,   172,   172,   172,   172,   172,    89,
   172,   nil,   nil,    89,   nil,   nil,   nil,   nil,    89,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    89,    89,   nil,    89,
    89,    89,    89,    89,    89,    89,    89,   167,    89,   nil,
   nil,   nil,   167,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   167,   167,   nil,   167,   167,   167,   167,   167,   167,   167,
   167,    40,   167,   nil,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    40,    40,   nil,    40,    40,    40,
    40,    40,    40,    40,    40,   158,    40,   nil,   nil,   nil,
   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   158,   158,
   nil,   158,   158,   158,   158,   158,   158,   158,   158,   152,
   158,   nil,   nil,   nil,   152,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   152,   152,   nil,   152,   152,   152,   152,   152,
   152,   152,   152,   151,   152,   nil,   nil,   nil,   151,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   151,   nil,   151,
   151,   151,   151,   151,   151,   151,   151,   131,   151,   nil,
   nil,   nil,   131,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   131,   131,   nil,   131,   131,   131,   131,   131,   131,   131,
   131,   130,   131,   nil,   nil,   nil,   130,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   130,   130,   nil,   130,   130,   130,
   130,   130,   130,   130,   130,   129,   130,   nil,   nil,   nil,
   129,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   129,   129,
   nil,   129,   129,   129,   129,   129,   129,   129,   129,   128,
   129,   nil,   nil,   nil,   128,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   128,   128,    13,   128,   128,   128,   128,   128,
   128,   128,   128,   nil,   128,    13,    13,    13,    13,    13,
    13,    13,    13,    10,    13,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,
    10,    10,    10,    10,    10,    10,    10,   126,    10,   nil,
   nil,   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   126,   126,   nil,   126,   126,   126,   126,   126,   126,   126,
   126,    99,   126,   nil,   nil,   nil,    99,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    99,    99,   nil,    99,    99,    99,
    99,    99,    99,    99,    99,   124,    99,   nil,   nil,   nil,
   124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   124,   124,
   nil,   124,   124,   124,   124,   124,   124,   124,   124,    56,
   124,   nil,   nil,   nil,    56,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    56,    56,   nil,    56,    56,    56,    56,    56,
    56,    56,    56,   123,    56,   nil,   nil,   nil,   123,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   123,   123,   nil,   123,
   123,   123,   123,   123,   123,   123,   123,   122,   123,   nil,
   nil,   nil,   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   122,   122,   nil,   122,   122,   122,   122,   122,   122,   122,
   122,   174,   122,   nil,   nil,   nil,   174,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   174,   174,   nil,   174,   174,   174,
   174,   174,   174,   174,   174,     5,   174,   nil,   nil,   nil,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,
   nil,     5,     5,     5,     5,     5,     5,     5,     5,   176,
     5,   nil,   nil,   nil,   176,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   176,   176,   nil,   176,   176,   176,   176,   176,
   176,   176,   176,    57,   176,   nil,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    57,    57,   nil,    57,
    57,    57,    57,    57,    57,    57,    57,    51,    57,   nil,
   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    51,    51,   nil,    51,    51,    51,    51,    51,    51,    51,
    51,    52,    51,   nil,   nil,   nil,    52,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    52,    52,   nil,    52,    52,    52,
    52,    52,    52,    52,    52,    53,    52,   nil,   nil,   nil,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    53,    53,
   nil,    53,    53,    53,    53,    53,    53,    53,    53,    54,
    53,   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    54,    54,   nil,    54,    54,    54,    54,    54,
    54,    54,    54,    55,    54,   nil,   nil,   nil,    55,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    55,    55,   nil,    55,
    55,    55,    55,    55,    55,    55,    55,    39,    55,   nil,
   nil,   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    39,   nil,    39,    39,    39,    39,    39,    39,    39,
    39,   nil,    39 ]

racc_action_pointer = [
     4,    23,   156,   nil,   nil,   633,     6,   109,   nil,   nil,
   441,   106,   nil,   417,   nil,   nil,    92,   nil,   nil,    98,
   113,   nil,    93,   124,    87,   nil,   nil,    86,   nil,   nil,
    85,   nil,   101,   nil,    82,    12,    98,   102,    77,   825,
   239,   nil,   nil,    41,   nil,   nil,    -3,    58,    70,    55,
   nil,   705,   729,   753,   777,   801,   537,   681,    53,   nil,
   nil,   nil,   nil,   nil,    49,    48,   nil,   nil,    41,   135,
   nil,    42,   nil,   nil,   nil,   nil,    76,    -2,     6,   nil,
    11,   nil,   nil,   nil,   nil,   nil,    36,    39,   nil,   191,
   nil,    37,    32,   nil,   nil,   nil,   nil,   nil,   nil,   489,
   -17,   nil,   nil,   nil,    63,    48,    68,   nil,    66,    71,
   nil,   nil,   nil,   nil,   nil,    51,    54,   -18,    60,   107,
    79,   nil,   585,   561,   513,   -15,   465,    -1,   407,   383,
   359,   335,    88,   nil,   nil,    84,   nil,    85,    85,   112,
   nil,   nil,   nil,   nil,   107,   nil,   nil,   nil,   nil,   102,
   nil,   311,   287,   110,   nil,   113,   nil,   nil,   263,   nil,
   nil,    18,   110,   nil,   nil,   118,   nil,   215,   136,   118,
   nil,   nil,   163,   nil,   609,   nil,   657,   nil,   130,   nil,
   nil ]

racc_action_default = [
  -104,  -104,  -104,   -95,   -85,  -104,   -74,  -104,   -77,   -78,
  -104,  -103,   -80,  -104,    -3,   -82,  -104,   -83,   -79,   -94,
  -104,   -86,  -104,    -2,  -104,   -88,   -96,  -104,    -4,   -97,
  -104,   -68,    -6,   -99,  -104,   -71,    -8,  -104,  -104,  -104,
  -104,   -98,   -75,  -101,   -76,  -102,  -104,  -104,   -25,  -104,
    -1,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,   181,
   -81,   -72,   -73,  -100,  -104,  -104,   -84,   -94,   -27,  -104,
   -45,   -10,   -11,   -12,   -13,   -14,  -104,  -104,  -104,    -5,
  -104,   -69,   -70,    -7,   -87,   -89,   -32,  -104,   -58,  -104,
   -59,   -46,   -26,   -48,   -51,   -52,   -56,   -53,   -55,  -104,
  -104,   -66,   -57,   -67,   -22,  -104,  -104,   -18,   -20,  -104,
   -90,   -91,   -92,   -93,    -9,  -104,  -104,  -104,   -67,  -104,
  -104,   -50,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,  -104,   -21,   -15,  -104,   -19,  -104,   -33,   -28,
   -30,   -31,   -54,   -49,   -47,   -64,   -65,   -42,   -44,  -104,
   -60,  -104,  -104,  -104,   -61,  -104,   -62,   -63,  -104,   -37,
   -16,  -104,  -104,   -43,   -41,  -104,   -36,  -104,   -40,  -104,
   -17,   -23,  -104,   -29,  -104,   -35,  -104,   -38,   -24,   -34,
   -39 ]

racc_goto_table = [
    36,    92,    71,    72,    38,    28,   159,   169,    61,    62,
   145,   146,   147,    66,   150,   141,   154,   155,   156,   157,
   140,   117,   171,    42,    83,   180,    44,   166,    81,    82,
   139,   170,   114,    86,    68,    48,   144,   143,   121,   164,
   165,    50,    23,     2,   nil,    65,   nil,   138,   nil,   nil,
    76,    77,    78,    36,    80,   175,   nil,   nil,    79,   134,
   nil,   141,   179,   nil,   nil,   nil,   173,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,   160,
   161,    72,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   168 ]

racc_goto_check = [
     6,    20,    12,    13,     6,     4,    27,    28,    39,    39,
    25,    25,    25,     7,    25,    23,    25,    25,    25,    25,
    22,    20,    19,    41,     7,    28,    41,    27,    38,    38,
    21,    18,    11,    10,     9,     8,    31,    32,    33,    25,
    25,     3,     2,     1,   nil,     6,   nil,    20,   nil,   nil,
     6,     6,     6,     6,     6,    25,   nil,   nil,     4,    13,
   nil,    23,    25,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,    13,
    12,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    43,    41,    18,     4,   nil,    -1,   -34,    12,   -14,
   -35,   -54,   -47,   -46,   nil,   nil,   nil,   nil,  -130,  -139,
   -68,   -86,   -96,  -101,   nil,  -112,   nil,  -126,  -151,   nil,
   nil,   -84,   -82,   -61,   nil,   nil,   nil,   nil,   -28,   -31,
   nil,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    32,   103,     4,   nil,   nil,
   nil,   nil,   nil,    21,    73,    74,    75,   109,   nil,   nil,
   nil,   nil,   nil,    18,    96,   100,   102,   nil,   nil,    88,
    90,    91,    93,    94,    95,    97,    98,   101,    31,    35,
     6,     8,     9,    12,    15,    17,    22,    25,    26,    29,
    33 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :asterisk => 3,
 :comma => 4,
 :AS => 5,
 :FROM => 6,
 :CROSS => 7,
 :JOIN => 8,
 :INNER => 9,
 :LEFT => 10,
 :OUTER => 11,
 :RIGHT => 12,
 :ON => 13,
 :WHERE => 14,
 :GROUP => 15,
 :BY => 16,
 :HAVING => 17,
 :NOT => 18,
 :BETWEEN => 19,
 :AND => 20,
 :IN => 21,
 :left_paren => 22,
 :right_paren => 23,
 :LIKE => 24,
 :IS => 25,
 :NULL => 26,
 :identifier => 27,
 :OR => 28,
 :equals_operator => 29,
 :not_equals_operator => 30,
 :less_than_operator => 31,
 :greater_than_operator => 32,
 :less_than_or_equals_operator => 33,
 :greater_than_or_equals_operator => 34,
 :plus_sign => 35,
 :minus_sign => 36,
 :solidus => 37,
 :period => 38,
 :COUNT => 39,
 :AVG => 40,
 :MAX => 41,
 :MIN => 42,
 :SUM => 43,
 :character_string_literal => 44,
 :DATE => 45,
 :date_string => 46,
 :unsigned_integer => 47 }

racc_use_result_var = true

racc_nt_base = 48

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'asterisk',
'comma',
'AS',
'FROM',
'CROSS',
'JOIN',
'INNER',
'LEFT',
'OUTER',
'RIGHT',
'ON',
'WHERE',
'GROUP',
'BY',
'HAVING',
'NOT',
'BETWEEN',
'AND',
'IN',
'left_paren',
'right_paren',
'LIKE',
'IS',
'NULL',
'identifier',
'OR',
'equals_operator',
'not_equals_operator',
'less_than_operator',
'greater_than_operator',
'less_than_or_equals_operator',
'greater_than_or_equals_operator',
'plus_sign',
'minus_sign',
'solidus',
'period',
'COUNT',
'AVG',
'MAX',
'MIN',
'SUM',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'$start',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'column_name',
'from_clause',
'where_clause',
'group_by_clause',
'having_clause',
'table_reference',
'table_name',
'joined_table',
'cross_join',
'qualified_join',
'join_type',
'join_specification',
'join_condition',
'search_condition',
'grouping_column_reference_list',
'grouping_column_reference',
'column_reference',
'between_predicate',
'row_value_constructor',
'in_predicate',
'in_predicate_value',
'in_value_list',
'like_predicate',
'null_predicate',
'boolean_term',
'boolean_factor',
'boolean_test',
'boolean_primary',
'predicate',
'comparison_predicate',
'row_value_constructor_element',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'set_function_specification',
'unsigned_numeric_literal',
'general_literal',
'qualifier',
'general_set_function',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 7
  def _reduce_2( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 10
  def _reduce_3( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_4( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 14
  def _reduce_5( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 18
  def _reduce_7( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

 # reduce 8 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 22
  def _reduce_9( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 25
  def _reduce_10( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 28
  def _reduce_11( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 36
  def _reduce_15( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], SQL::Statement::Table.new(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 37
  def _reduce_16( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], SQL::Statement::Table.new(val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 40
  def _reduce_17( val, _values, result )
 result = val[1].new(val[0], val[3], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 43
  def _reduce_18( val, _values, result )
 result = SQL::Statement::InnerJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_19( val, _values, result )
 result = SQL::Statement::LeftOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 45
  def _reduce_20( val, _values, result )
 result = SQL::Statement::LeftJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 46
  def _reduce_21( val, _values, result )
 result = SQL::Statement::RightOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 47
  def _reduce_22( val, _values, result )
 result = SQL::Statement::RightJoin
   result
  end
.,.,

 # reduce 23 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 53
  def _reduce_24( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 25 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 57
  def _reduce_26( val, _values, result )
 result = SQL::Statement::WhereClause.new(val[1])
   result
  end
.,.,

 # reduce 27 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 61
  def _reduce_28( val, _values, result )
 result = SQL::Statement::GroupByClause.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 64
  def _reduce_29( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 72
  def _reduce_33( val, _values, result )
 result = SQL::Statement::HavingClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 76
  def _reduce_34( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Between.new(val[0], val[3], val[5]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 77
  def _reduce_35( val, _values, result )
 result = SQL::Statement::Between.new(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 80
  def _reduce_36( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::In.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 81
  def _reduce_37( val, _values, result )
 result = SQL::Statement::In.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 84
  def _reduce_38( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 87
  def _reduce_39( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 40 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 94
  def _reduce_41( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Like.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 95
  def _reduce_42( val, _values, result )
 result = SQL::Statement::Like.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 98
  def _reduce_43( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Is.new(val[0], SQL::Statement::Null.new))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 99
  def _reduce_44( val, _values, result )
 result = SQL::Statement::Is.new(val[0], SQL::Statement::Null.new)
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 108
  def _reduce_47( val, _values, result )
 result = SQL::Statement::Or.new(val[0], val[2])
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 112
  def _reduce_49( val, _values, result )
 result = SQL::Statement::And.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 115
  def _reduce_50( val, _values, result )
 result = SQL::Statement::Not.new(val[1])
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

 # reduce 53 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 123
  def _reduce_54( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 55 omitted

 # reduce 56 omitted

 # reduce 57 omitted

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 133
  def _reduce_60( val, _values, result )
 result = SQL::Statement::Equals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 134
  def _reduce_61( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Equals.new(val[0], val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 135
  def _reduce_62( val, _values, result )
 result = SQL::Statement::Less.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 136
  def _reduce_63( val, _values, result )
 result = SQL::Statement::Greater.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 137
  def _reduce_64( val, _values, result )
 result = SQL::Statement::LessOrEquals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 138
  def _reduce_65( val, _values, result )
 result = SQL::Statement::GreaterOrEquals.new(val[0], val[2])
   result
  end
.,.,

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 150
  def _reduce_69( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 151
  def _reduce_70( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 71 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 155
  def _reduce_72( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 156
  def _reduce_73( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 74 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 160
  def _reduce_75( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 161
  def _reduce_76( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 168
  def _reduce_81( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 82 omitted

 # reduce 83 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 175
  def _reduce_84( val, _values, result )
 result = SQL::Statement::QualifiedColumn.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 176
  def _reduce_85( val, _values, result )
 result = SQL::Statement::Column.new(val[0])
   result
  end
.,.,

 # reduce 86 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 182
  def _reduce_87( val, _values, result )
 result = SQL::Statement::Count.new(SQL::Statement::All.new)
   result
  end
.,.,

 # reduce 88 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 186
  def _reduce_89( val, _values, result )
 result = SQL::Statement::Count.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 187
  def _reduce_90( val, _values, result )
 result = SQL::Statement::Average.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 188
  def _reduce_91( val, _values, result )
 result = SQL::Statement::Maximum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 189
  def _reduce_92( val, _values, result )
 result = SQL::Statement::Minimum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 190
  def _reduce_93( val, _values, result )
 result = SQL::Statement::Sum.new(val[2])
   result
  end
.,.,

 # reduce 94 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 198
  def _reduce_95( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 96 omitted

 # reduce 97 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 205
  def _reduce_98( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 99 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 211
  def _reduce_100( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 212
  def _reduce_101( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 213
  def _reduce_102( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 214
  def _reduce_103( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

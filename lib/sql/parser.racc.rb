#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..idf7316a9b92', 'lib/sql/parser.racc', 294

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..idf7316a9b92

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 57, :_reduce_none,
 1, 58, :_reduce_none,
 2, 59, :_reduce_3,
 0, 61, :_reduce_none,
 3, 61, :_reduce_5,
 3, 62, :_reduce_6,
 1, 62, :_reduce_none,
 2, 63, :_reduce_8,
 1, 64, :_reduce_none,
 1, 64, :_reduce_10,
 0, 65, :_reduce_11,
 1, 65, :_reduce_12,
 1, 65, :_reduce_13,
 3, 67, :_reduce_14,
 1, 60, :_reduce_none,
 3, 68, :_reduce_16,
 2, 68, :_reduce_17,
 1, 69, :_reduce_18,
 1, 69, :_reduce_19,
 3, 71, :_reduce_20,
 1, 71, :_reduce_none,
 3, 72, :_reduce_22,
 2, 72, :_reduce_23,
 1, 72, :_reduce_none,
 4, 70, :_reduce_25,
 2, 74, :_reduce_26,
 3, 78, :_reduce_27,
 2, 78, :_reduce_28,
 1, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 81, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 3, 82, :_reduce_34,
 4, 82, :_reduce_35,
 5, 83, :_reduce_36,
 1, 84, :_reduce_37,
 2, 84, :_reduce_38,
 1, 84, :_reduce_39,
 2, 84, :_reduce_40,
 1, 84, :_reduce_41,
 1, 84, :_reduce_42,
 2, 84, :_reduce_43,
 1, 85, :_reduce_none,
 1, 85, :_reduce_none,
 2, 86, :_reduce_46,
 4, 87, :_reduce_47,
 1, 89, :_reduce_none,
 0, 75, :_reduce_none,
 2, 75, :_reduce_50,
 0, 76, :_reduce_none,
 3, 76, :_reduce_52,
 3, 91, :_reduce_53,
 1, 91, :_reduce_none,
 1, 92, :_reduce_none,
 0, 77, :_reduce_none,
 2, 77, :_reduce_57,
 1, 94, :_reduce_none,
 6, 95, :_reduce_59,
 5, 95, :_reduce_60,
 4, 97, :_reduce_61,
 3, 97, :_reduce_62,
 1, 98, :_reduce_none,
 3, 98, :_reduce_64,
 3, 99, :_reduce_65,
 1, 99, :_reduce_none,
 4, 100, :_reduce_67,
 3, 100, :_reduce_68,
 4, 101, :_reduce_69,
 3, 101, :_reduce_70,
 2, 102, :_reduce_71,
 1, 79, :_reduce_72,
 3, 90, :_reduce_73,
 1, 90, :_reduce_none,
 1, 88, :_reduce_none,
 3, 88, :_reduce_76,
 1, 103, :_reduce_none,
 3, 103, :_reduce_78,
 2, 104, :_reduce_79,
 1, 104, :_reduce_none,
 1, 105, :_reduce_none,
 1, 106, :_reduce_none,
 3, 106, :_reduce_83,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 3, 108, :_reduce_90,
 3, 108, :_reduce_91,
 3, 108, :_reduce_92,
 3, 108, :_reduce_93,
 3, 108, :_reduce_94,
 3, 108, :_reduce_95,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 109, :_reduce_none,
 1, 73, :_reduce_none,
 3, 110, :_reduce_100,
 3, 110, :_reduce_101,
 1, 110, :_reduce_none,
 3, 111, :_reduce_103,
 3, 111, :_reduce_104,
 1, 111, :_reduce_none,
 2, 112, :_reduce_106,
 2, 112, :_reduce_107,
 1, 112, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 3, 113, :_reduce_112,
 1, 114, :_reduce_none,
 1, 114, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 117, :_reduce_117,
 3, 93, :_reduce_118,
 1, 93, :_reduce_none,
 1, 120, :_reduce_none,
 4, 115, :_reduce_121,
 1, 115, :_reduce_none,
 4, 121, :_reduce_123,
 4, 121, :_reduce_124,
 4, 121, :_reduce_125,
 4, 121, :_reduce_126,
 4, 121, :_reduce_127,
 1, 66, :_reduce_128,
 3, 119, :_reduce_129,
 2, 119, :_reduce_130,
 1, 119, :_reduce_none,
 1, 122, :_reduce_none,
 2, 123, :_reduce_133,
 1, 118, :_reduce_none,
 3, 124, :_reduce_135,
 2, 124, :_reduce_136,
 2, 124, :_reduce_137,
 1, 124, :_reduce_138 ]

racc_reduce_n = 139

racc_shift_n = 230

racc_action_table = [
    28,    53,    75,   134,    75,   117,   196,   194,    66,   182,
     6,   183,   184,   195,    49,    50,    67,    68,   140,    28,
   141,   124,    41,   104,   105,   142,   143,    65,   118,    17,
    65,    65,   155,    65,    52,   108,   145,    43,    46,    85,
    15,    18,    23,    26,    29,    33,    36,    39,    17,    44,
    28,   147,   148,   180,   149,   150,    43,    46,    65,    15,
    18,    23,    26,    29,    33,    36,    39,   154,    44,    28,
   110,   155,    41,   107,   157,    13,   103,    65,   172,    17,
   109,   174,   111,   112,    85,   114,   115,    43,    46,    85,
    15,    18,    23,    26,    29,    33,    36,    39,    17,    44,
    28,     6,   101,   180,   100,    65,    43,    46,    94,    15,
    18,    23,    26,    29,    33,    36,    39,    91,    44,    85,
    72,   160,   162,    71,   165,   167,   168,    28,    63,    17,
   134,   158,   159,   161,   163,   164,   166,    43,    46,   190,
    15,    18,    23,    26,    29,    33,    36,    39,   124,    44,
    28,    62,    61,    41,    60,   118,    17,   138,   197,   101,
    17,    59,    58,   157,    43,    46,    55,    15,    18,    23,
    26,    29,    33,    36,    39,    28,    44,    54,    41,    17,
     6,   190,    51,   210,   -72,   213,   214,    43,    46,   155,
    15,    18,    23,    26,    29,    33,    36,    39,    28,    44,
   215,   180,    48,   217,    17,    47,   219,   220,    17,    65,
   155,     8,    43,    46,     7,    15,    18,    23,    26,    29,
    33,    36,    39,    28,    44,   227,    41,    17,   228,    65,
   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,    18,
    23,    26,    29,    33,    36,    39,    28,    44,   nil,   180,
   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    46,   nil,    15,    18,    23,    26,    29,    33,    36,
    39,    28,    44,   nil,    41,    17,     6,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    46,   nil,    15,    18,    23,    26,
    29,    33,    36,    39,    28,    44,   nil,   134,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,
   nil,    15,    18,    23,    26,    29,    33,    36,    39,   nil,
    44,    28,   118,    17,   134,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    46,   nil,    15,    18,    23,    26,    29,    33,
    36,    39,   124,    44,   nil,   nil,   nil,   nil,    28,   118,
    17,   134,   nil,     6,   nil,   nil,   nil,   nil,    43,    46,
   nil,    15,    18,    23,    26,    29,    33,    36,    39,   124,
    44,    28,   nil,   nil,   180,   nil,   118,    17,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,    18,
    23,    26,    29,    33,    36,    39,    28,    44,   nil,   180,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,
   nil,    15,    18,    23,    26,    29,    33,    36,    39,    28,
    44,   nil,   180,   nil,   nil,    17,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    46,   nil,    15,    18,    23,    26,
    29,    33,    36,    39,   nil,    44,    28,   nil,    17,   134,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,
    18,    23,    26,    29,    33,    36,    39,   124,    44,    28,
   nil,   nil,    41,   nil,   118,    17,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    46,   nil,    15,    18,    23,    26,
    29,    33,    36,    39,    28,    44,   nil,    41,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,
    18,    23,    26,    29,    33,    36,    39,    28,    44,   nil,
    41,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    46,   nil,    15,    18,    23,    26,    29,    33,
    36,    39,    28,    44,   nil,   180,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    18,    23,
    26,    29,    33,    36,    39,    28,    44,   nil,   180,   nil,
   nil,    17,   nil,   nil,   nil,    28,   nil,   nil,    41,    43,
    46,   nil,    15,    18,    23,    26,    29,    33,    36,    39,
   nil,    44,   nil,   nil,    17,   nil,    28,   nil,   nil,    41,
   nil,   nil,    43,    46,    17,    15,    18,    23,    26,    29,
    33,    36,    39,   nil,    44,    15,    18,    23,    26,    29,
    33,    36,    39,    28,    44,    17,    41,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    46,   nil,    15,    18,    23,    26,
    29,    33,    36,    39,    28,    44,   nil,    41,   nil,   nil,
   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    46,   nil,    15,    18,    23,    26,    29,    33,    36,
    39,    28,    44,    17,    41,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    46,   nil,    15,    18,    23,    26,    29,    33,
    36,    39,    28,    44,   nil,    41,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,
   nil,    15,    18,    23,    26,    29,    33,    36,    39,    28,
    44,    17,    41,   nil,   nil,    83,   nil,   nil,   nil,    43,
    46,   nil,    15,    18,    23,    26,    29,    33,    36,    39,
    28,    44,   nil,   180,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,
    18,    23,    26,    29,    33,    36,    39,    28,    44,    17,
   180,   nil,   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,
    15,    18,    23,    26,    29,    33,    36,    39,    28,    44,
   nil,    41,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    43,    46,   nil,    15,    18,    23,
    26,    29,    33,    36,    39,    28,    44,    17,   180,   nil,
   nil,   nil,   nil,   nil,   nil,    43,    46,   nil,    15,    18,
    23,    26,    29,    33,    36,    39,   nil,    44,   nil,   nil,
   nil,   nil,    28,   nil,    17,   134,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    46,   nil,    15,    18,    23,    26,    29,
    33,    36,    39,   124,    44,   nil,   nil,   nil,   nil,   nil,
   118,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,
    46,   nil,    15,    18,    23,    26,    29,    33,    36,    39,
   110,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   109,   nil,   111,   112,   nil,   114,   115,   205,   202 ]

racc_action_check = [
    91,    21,   103,    91,    48,    87,   169,   168,    38,   160,
     0,   160,   160,   168,    16,    16,    39,    39,    93,   220,
    95,    91,   220,    78,    78,    96,    98,    87,    91,    91,
    38,   103,   169,    48,    21,    84,   109,    91,    91,   110,
    91,    91,    91,    91,    91,    91,    91,    91,   220,    91,
   217,   112,   113,   217,   114,   115,   220,   220,   117,   220,
   220,   220,   220,   220,   220,   220,   220,   118,   220,     6,
    86,   119,     6,    83,   125,     6,    76,    72,   138,   217,
    86,   139,    86,    86,   145,    86,    86,   217,   217,   148,
   217,   217,   217,   217,   217,   217,   217,   217,     6,   217,
   210,   154,    69,   210,    68,    66,     6,     6,    59,     6,
     6,     6,     6,     6,     6,     6,     6,    57,     6,    55,
    45,   133,   133,    44,   133,   133,   133,   205,    36,   210,
   205,   133,   133,   133,   133,   133,   133,   210,   210,   165,
   210,   210,   210,   210,   210,   210,   210,   210,   205,   210,
    62,    35,    33,    62,    29,   205,   205,    92,   170,   171,
   172,    28,    26,   177,   205,   205,    25,   205,   205,   205,
   205,   205,   205,   205,   205,   190,   205,    23,   190,    62,
   190,   183,    18,   186,    17,   194,   198,    62,    62,   201,
    62,    62,    62,    62,    62,    62,    62,    62,   184,    62,
   202,   184,     8,   207,   190,     7,   211,   212,   214,   215,
   216,     5,   190,   190,     2,   190,   190,   190,   190,   190,
   190,   190,   190,    61,   190,   223,    61,   184,   224,   228,
   nil,   nil,   nil,   nil,   nil,   184,   184,   nil,   184,   184,
   184,   184,   184,   184,   184,   184,   182,   184,   nil,   182,
   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    61,    61,   nil,    61,    61,    61,    61,    61,    61,    61,
    61,   180,    61,   nil,   180,   182,   180,   nil,   nil,   nil,
   nil,   nil,   nil,   182,   182,   nil,   182,   182,   182,   182,
   182,   182,   182,   182,   124,   182,   nil,   124,   nil,   nil,
   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   180,   180,
   nil,   180,   180,   180,   180,   180,   180,   180,   180,   nil,
   180,   174,   124,   124,   174,   nil,   nil,   nil,   nil,   nil,
   nil,   124,   124,   nil,   124,   124,   124,   124,   124,   124,
   124,   124,   174,   124,   nil,   nil,   nil,   nil,   134,   174,
   174,   134,   nil,   134,   nil,   nil,   nil,   nil,   174,   174,
   nil,   174,   174,   174,   174,   174,   174,   174,   174,   134,
   174,   167,   nil,   nil,   167,   nil,   134,   134,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   134,   134,   nil,   134,   134,
   134,   134,   134,   134,   134,   134,   166,   134,   nil,   166,
   167,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   167,   167,
   nil,   167,   167,   167,   167,   167,   167,   167,   167,   164,
   167,   nil,   164,   nil,   nil,   166,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   166,   166,   nil,   166,   166,   166,   166,
   166,   166,   166,   166,   nil,   166,   155,   nil,   164,   155,
   nil,   nil,   nil,   nil,   nil,   nil,   164,   164,   nil,   164,
   164,   164,   164,   164,   164,   164,   164,   155,   164,    60,
   nil,   nil,    60,   nil,   155,   155,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   155,   155,   nil,   155,   155,   155,   155,
   155,   155,   155,   155,    41,   155,   nil,    41,    60,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    60,    60,   nil,    60,
    60,    60,    60,    60,    60,    60,    60,    43,    60,   nil,
    43,   nil,   nil,    41,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    41,    41,   nil,    41,    41,    41,    41,    41,    41,
    41,    41,   163,    41,   nil,   163,    43,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    43,    43,
    43,    43,    43,    43,    43,   162,    43,   nil,   162,   nil,
   nil,   163,   nil,   nil,   nil,    46,   nil,   nil,    46,   163,
   163,   nil,   163,   163,   163,   163,   163,   163,   163,   163,
   nil,   163,   nil,   nil,   162,   nil,    63,   nil,   nil,    63,
   nil,   nil,   162,   162,    46,   162,   162,   162,   162,   162,
   162,   162,   162,   nil,   162,    46,    46,    46,    46,    46,
    46,    46,    46,    49,    46,    63,    49,   nil,   nil,   nil,
   nil,   nil,   nil,    63,    63,   nil,    63,    63,    63,    63,
    63,    63,    63,    63,    50,    63,   nil,    50,   nil,   nil,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,    49,   nil,    49,    49,    49,    49,    49,    49,    49,
    49,    52,    49,    50,    52,   nil,   nil,   nil,   nil,   nil,
   nil,    50,    50,   nil,    50,    50,    50,    50,    50,    50,
    50,    50,    53,    50,   nil,    53,   nil,   nil,   nil,   nil,
    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,    52,
   nil,    52,    52,    52,    52,    52,    52,    52,    52,    54,
    52,    53,    54,   nil,   nil,    54,   nil,   nil,   nil,    53,
    53,   nil,    53,    53,    53,    53,    53,    53,    53,    53,
   161,    53,   nil,   161,   nil,   nil,   nil,   nil,    54,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    54,    54,   nil,    54,
    54,    54,    54,    54,    54,    54,    54,   158,    54,   161,
   158,   nil,   nil,   nil,   nil,   nil,   nil,   161,   161,   nil,
   161,   161,   161,   161,   161,   161,   161,   161,    58,   161,
   nil,    58,   nil,   nil,   nil,   nil,   158,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   158,   158,   nil,   158,   158,   158,
   158,   158,   158,   158,   158,   159,   158,    58,   159,   nil,
   nil,   nil,   nil,   nil,   nil,    58,    58,   nil,    58,    58,
    58,    58,    58,    58,    58,    58,   nil,    58,   nil,   nil,
   nil,   nil,   157,   nil,   159,   157,   nil,   nil,   nil,   nil,
   nil,   nil,   159,   159,   nil,   159,   159,   159,   159,   159,
   159,   159,   159,   157,   159,   nil,   nil,   nil,   nil,   nil,
   157,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   157,
   157,   nil,   157,   157,   157,   157,   157,   157,   157,   157,
   176,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   176,   nil,   176,   176,   nil,   176,   176,   176,   176 ]

racc_action_pointer = [
     0,   nil,   214,   nil,   nil,   209,    64,   205,   199,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -28,   138,   177,   nil,
   nil,   -10,   nil,   169,   nil,   153,   154,   nil,   115,   146,
   nil,   nil,   nil,   144,   nil,   147,   120,   nil,    -4,   -36,
   nil,   489,   nil,   512,    68,    74,   570,   nil,    -1,   618,
   639,   nil,   666,   687,   714,    85,   nil,    94,   783,   103,
   464,   218,   145,   591,   nil,   nil,    71,   nil,    52,    93,
   nil,   nil,    43,   nil,   nil,   nil,    72,   nil,    17,   nil,
   nil,   nil,   nil,    64,    26,   nil,    66,    -7,   nil,   nil,
   nil,    -5,   133,     9,   nil,    11,    16,   nil,    17,   nil,
   nil,   nil,   nil,    -3,   nil,   nil,   nil,   nil,   nil,    21,
     5,   nil,    33,    37,    36,    37,   nil,    24,    59,    36,
   nil,   nil,   nil,   nil,   289,    46,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    95,   343,   nil,   nil,   nil,    75,    56,
   nil,   nil,   nil,   nil,   nil,    50,   nil,   nil,    55,   nil,
   nil,   nil,   nil,   nil,    91,   441,   nil,   837,   762,   810,
   -18,   735,   560,   537,   414,   131,   391,   366,   -19,    -3,
   149,   150,   126,   nil,   316,   nil,   886,   135,   nil,   nil,
   266,   nil,   241,   173,   193,   nil,   155,   nil,   nil,   nil,
   170,   nil,   nil,   nil,   153,   nil,   nil,   nil,   182,   nil,
   nil,   154,   192,   nil,   nil,   122,   nil,   175,   nil,   nil,
    95,   197,   203,   nil,   174,   175,   175,    45,   nil,   nil,
    14,   nil,   nil,   216,   224,   nil,   nil,   nil,   195,   nil ]

racc_action_default = [
  -139,   -15,  -139,    -1,    -2,    -4,  -139,  -139,  -139,    -3,
  -122,  -119,   -99,   -18,  -131,  -117,  -102,  -128,  -139,  -132,
  -120,  -105,  -134,  -139,  -108,   -17,  -139,  -109,  -138,  -139,
  -111,  -110,   -19,  -139,  -113,   -21,  -139,  -114,   -24,  -139,
  -115,  -139,  -116,  -139,  -139,  -139,  -139,   230,  -139,  -139,
  -139,  -137,  -139,  -139,  -139,  -139,   -16,   -49,  -139,  -136,
  -139,  -139,  -139,  -139,   -23,  -128,  -139,  -130,  -139,  -139,
  -106,  -133,  -139,  -107,    -9,   -10,    -5,    -7,   -11,  -100,
  -101,  -104,  -103,  -139,  -139,   -72,   -26,   -29,   -30,   -32,
   -33,  -139,   -51,  -139,  -135,  -139,  -139,   -20,  -139,   -22,
  -129,  -112,  -118,  -139,   -12,   -13,    -8,  -121,  -123,  -139,
  -139,   -37,   -39,  -139,   -41,   -42,   -28,  -139,  -139,   -50,
   -87,   -58,   -88,   -89,  -139,   -75,   -77,   -97,   -80,   -98,
   -85,   -81,   -82,  -139,  -139,   -86,   -84,   -96,  -139,   -56,
  -124,  -125,  -126,  -127,    -6,  -139,   -34,   -38,  -139,   -40,
   -43,   -27,   -31,   -71,  -139,  -139,   -79,  -139,  -139,  -139,
  -139,  -139,  -139,  -139,  -139,  -139,  -139,  -139,  -139,  -139,
  -139,   -98,  -139,   -25,  -139,   -35,  -139,   -76,   -78,   -90,
  -139,   -91,  -139,  -139,  -139,   -92,  -139,   -93,   -94,   -63,
  -139,   -62,   -95,   -68,  -139,   -70,   -83,   -14,   -52,   -54,
   -55,   -57,  -139,   -36,   -44,  -139,   -45,  -139,   -61,   -67,
  -139,  -139,   -66,   -69,  -139,  -139,   -46,  -139,   -60,   -64,
  -139,   -53,   -74,  -139,   -48,   -59,   -65,   -47,  -139,   -73 ]

racc_goto_table = [
    38,   119,    64,    86,    87,    32,   152,    77,   200,   191,
   211,   224,    74,   179,   181,   173,   185,   186,   187,   188,
    70,   192,   193,    73,   199,    79,    80,   208,    81,    82,
    99,    56,    25,   153,   203,    69,   102,   207,   204,   209,
   226,   206,   106,   223,   169,   139,   198,    76,    84,     9,
   200,   116,    93,   152,    95,    96,    38,    98,     5,   146,
     4,    97,   144,     3,   177,   218,   221,    74,   178,   156,
    57,   152,   225,    92,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   151,   nil,   nil,   201,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   175,   nil,   176,    87,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   216,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   171,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    69,   nil,   nil,   nil,   nil,   222,
   nil,   nil,   nil,   nil,   212,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   229,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   212 ]

racc_goto_check = [
    17,    32,    10,    22,    23,    15,    11,     7,    37,    42,
    43,    34,    10,    40,    40,    21,    40,    40,    40,    40,
    57,    40,    40,    57,    36,    54,    54,    42,    55,    55,
    10,    14,    13,    25,    29,    17,    10,    40,    30,    40,
    43,    31,     9,    33,    32,    20,    35,     6,    17,     5,
    37,    10,    17,    11,    17,    17,    17,    17,     4,    23,
     3,    15,     7,     2,    47,    40,    36,    10,    48,    49,
    18,    11,    40,    19,     1,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    23,   nil,    22,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17 ]

racc_goto_pointer = [
   nil,    74,    63,    60,    58,    44,    -1,   -41,   nil,   -36,
   -36,  -112,   nil,    26,     6,    -1,   nil,    -6,    45,    16,
   -47,  -124,   -52,   -51,   nil,   -85,   nil,   nil,   nil,  -142,
  -138,  -135,   -90,  -172,  -204,  -126,  -148,  -164,   nil,   nil,
  -145,   nil,  -156,  -180,   nil,   nil,   nil,   -91,   -89,   -55,
   nil,   nil,   nil,   nil,   -24,   -24,   nil,   -23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   170,   nil,   nil,   nil,    78,   nil,
    11,   121,     1,   nil,   nil,   nil,    35,   129,   nil,   nil,
   nil,   nil,   nil,    20,    88,   189,    89,    90,   113,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,   127,   130,
   133,   135,   nil,   nil,   120,   122,   123,   125,   126,   128,
   131,   132,   136,   137,    12,    16,    21,    24,    27,    30,
    34,    37,    40,    42,    45,    10,    14,    19,    22 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :ORDER => 2,
 :BY => 3,
 :comma => 4,
 :unsigned_integer => 5,
 :ASC => 6,
 :DESC => 7,
 :left_paren => 8,
 :right_paren => 9,
 :SELECT => 10,
 :asterisk => 11,
 :AS => 12,
 :FROM => 13,
 :CROSS => 14,
 :JOIN => 15,
 :INNER => 16,
 :LEFT => 17,
 :OUTER => 18,
 :RIGHT => 19,
 :FULL => 20,
 :ON => 21,
 :USING => 22,
 :WHERE => 23,
 :GROUP => 24,
 :HAVING => 25,
 :NOT => 26,
 :BETWEEN => 27,
 :AND => 28,
 :IN => 29,
 :LIKE => 30,
 :IS => 31,
 :NULL => 32,
 :EXISTS => 33,
 :identifier => 34,
 :OR => 35,
 :equals_operator => 36,
 :not_equals_operator => 37,
 :less_than_operator => 38,
 :greater_than_operator => 39,
 :less_than_or_equals_operator => 40,
 :greater_than_or_equals_operator => 41,
 :plus_sign => 42,
 :minus_sign => 43,
 :solidus => 44,
 :CURRENT_USER => 45,
 :period => 46,
 :COUNT => 47,
 :AVG => 48,
 :MAX => 49,
 :MIN => 50,
 :SUM => 51,
 :quote => 52,
 :character_string_literal => 53,
 :DATE => 54,
 :date_string => 55 }

racc_use_result_var = true

racc_nt_base = 56

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'ORDER',
'BY',
'comma',
'unsigned_integer',
'ASC',
'DESC',
'left_paren',
'right_paren',
'SELECT',
'asterisk',
'AS',
'FROM',
'CROSS',
'JOIN',
'INNER',
'LEFT',
'OUTER',
'RIGHT',
'FULL',
'ON',
'USING',
'WHERE',
'GROUP',
'HAVING',
'NOT',
'BETWEEN',
'AND',
'IN',
'LIKE',
'IS',
'NULL',
'EXISTS',
'identifier',
'OR',
'equals_operator',
'not_equals_operator',
'less_than_operator',
'greater_than_operator',
'less_than_or_equals_operator',
'greater_than_or_equals_operator',
'plus_sign',
'minus_sign',
'solidus',
'CURRENT_USER',
'period',
'COUNT',
'AVG',
'MAX',
'MIN',
'SUM',
'quote',
'character_string_literal',
'DATE',
'date_string',
'$start',
'direct_sql_statement',
'direct_sql_data_statement',
'direct_select_statement_multiple_rows',
'query_expression',
'order_by_clause',
'sort_specification_list',
'sort_specification',
'sort_key',
'ordering_specification',
'column_name',
'subquery',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'from_clause',
'where_clause',
'group_by_clause',
'having_clause',
'table_reference',
'table_name',
'joined_table',
'table_subquery',
'cross_join',
'qualified_join',
'join_type',
'join_specification',
'join_condition',
'named_columns_join',
'search_condition',
'join_column_list',
'column_name_list',
'grouping_column_reference_list',
'grouping_column_reference',
'column_reference',
'row_subquery',
'between_predicate',
'row_value_constructor',
'in_predicate',
'in_predicate_value',
'in_value_list',
'like_predicate',
'null_predicate',
'exists_predicate',
'boolean_term',
'boolean_factor',
'boolean_test',
'boolean_primary',
'predicate',
'comparison_predicate',
'row_value_constructor_element',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_value_specification',
'set_function_specification',
'unsigned_literal',
'general_value_specification',
'unsigned_numeric_literal',
'general_literal',
'qualifier',
'general_set_function',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_3( val, _values, result )
 result = SQL::Statement::DirectSelect.new(val[0], val[1])
   result
  end
.,.,

 # reduce 4 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 16
  def _reduce_5( val, _values, result )
 result = SQL::Statement::OrderBy.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 19
  def _reduce_6( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 7 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 23
  def _reduce_8( val, _values, result )
 result = val[1].new(val[0])
   result
  end
.,.,

 # reduce 9 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 27
  def _reduce_10( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 30
  def _reduce_11( val, _values, result )
 result = SQL::Statement::Ascending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 31
  def _reduce_12( val, _values, result )
 result = SQL::Statement::Ascending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 32
  def _reduce_13( val, _values, result )
 result = SQL::Statement::Descending
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 37
  def _reduce_14( val, _values, result )
 result = SQL::Statement::Subquery.new(val[1])
   result
  end
.,.,

 # reduce 15 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 43
  def _reduce_16( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_17( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 47
  def _reduce_18( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 48
  def _reduce_19( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 51
  def _reduce_20( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_22( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 56
  def _reduce_23( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[1])
   result
  end
.,.,

 # reduce 24 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 60
  def _reduce_25( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 63
  def _reduce_26( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 66
  def _reduce_27( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 67
  def _reduce_28( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[1])
   result
  end
.,.,

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

 # reduce 33 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 79
  def _reduce_34( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 80
  def _reduce_35( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 83
  def _reduce_36( val, _values, result )
 result = val[1].new(val[0], val[3], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 86
  def _reduce_37( val, _values, result )
 result = SQL::Statement::InnerJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 87
  def _reduce_38( val, _values, result )
 result = SQL::Statement::LeftOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 88
  def _reduce_39( val, _values, result )
 result = SQL::Statement::LeftJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 89
  def _reduce_40( val, _values, result )
 result = SQL::Statement::RightOuterJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 90
  def _reduce_41( val, _values, result )
 result = SQL::Statement::RightJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 91
  def _reduce_42( val, _values, result )
 result = SQL::Statement::FullJoin
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 92
  def _reduce_43( val, _values, result )
 result = SQL::Statement::FullOuterJoin
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 99
  def _reduce_46( val, _values, result )
 result = SQL::Statement::On.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 102
  def _reduce_47( val, _values, result )
 result = SQL::Statement::Using.new(val[2])
   result
  end
.,.,

 # reduce 48 omitted

 # reduce 49 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 109
  def _reduce_50( val, _values, result )
 result = SQL::Statement::WhereClause.new(val[1])
   result
  end
.,.,

 # reduce 51 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 113
  def _reduce_52( val, _values, result )
 result = SQL::Statement::GroupByClause.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 116
  def _reduce_53( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 124
  def _reduce_57( val, _values, result )
 result = SQL::Statement::HavingClause.new(val[1])
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 131
  def _reduce_59( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Between.new(val[0], val[3], val[5]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 132
  def _reduce_60( val, _values, result )
 result = SQL::Statement::Between.new(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 135
  def _reduce_61( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::In.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 136
  def _reduce_62( val, _values, result )
 result = SQL::Statement::In.new(val[0], val[2])
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 140
  def _reduce_64( val, _values, result )
 result = SQL::Statement::InValueList.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 143
  def _reduce_65( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 66 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 150
  def _reduce_67( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Like.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 151
  def _reduce_68( val, _values, result )
 result = SQL::Statement::Like.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 154
  def _reduce_69( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Is.new(val[0], SQL::Statement::Null.new))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 155
  def _reduce_70( val, _values, result )
 result = SQL::Statement::Is.new(val[0], SQL::Statement::Null.new)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 158
  def _reduce_71( val, _values, result )
 result = SQL::Statement::Exists.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 162
  def _reduce_72( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 165
  def _reduce_73( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 171
  def _reduce_76( val, _values, result )
 result = SQL::Statement::Or.new(val[0], val[2])
   result
  end
.,.,

 # reduce 77 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 175
  def _reduce_78( val, _values, result )
 result = SQL::Statement::And.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 178
  def _reduce_79( val, _values, result )
 result = SQL::Statement::Not.new(val[1])
   result
  end
.,.,

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 186
  def _reduce_83( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 197
  def _reduce_90( val, _values, result )
 result = SQL::Statement::Equals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 198
  def _reduce_91( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Equals.new(val[0], val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 199
  def _reduce_92( val, _values, result )
 result = SQL::Statement::Less.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 200
  def _reduce_93( val, _values, result )
 result = SQL::Statement::Greater.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 201
  def _reduce_94( val, _values, result )
 result = SQL::Statement::LessOrEquals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 202
  def _reduce_95( val, _values, result )
 result = SQL::Statement::GreaterOrEquals.new(val[0], val[2])
   result
  end
.,.,

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 215
  def _reduce_100( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 216
  def _reduce_101( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 102 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 220
  def _reduce_103( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 221
  def _reduce_104( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 105 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 225
  def _reduce_106( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 226
  def _reduce_107( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 108 omitted

 # reduce 109 omitted

 # reduce 110 omitted

 # reduce 111 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 233
  def _reduce_112( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 113 omitted

 # reduce 114 omitted

 # reduce 115 omitted

 # reduce 116 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 244
  def _reduce_117( val, _values, result )
 result = SQL::Statement::CurrentUser.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 247
  def _reduce_118( val, _values, result )
 result = SQL::Statement::QualifiedColumn.new(val[0], val[2])
   result
  end
.,.,

 # reduce 119 omitted

 # reduce 120 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 254
  def _reduce_121( val, _values, result )
 result = SQL::Statement::Count.new(SQL::Statement::All.new)
   result
  end
.,.,

 # reduce 122 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 258
  def _reduce_123( val, _values, result )
 result = SQL::Statement::Count.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 259
  def _reduce_124( val, _values, result )
 result = SQL::Statement::Average.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 260
  def _reduce_125( val, _values, result )
 result = SQL::Statement::Maximum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 261
  def _reduce_126( val, _values, result )
 result = SQL::Statement::Minimum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 262
  def _reduce_127( val, _values, result )
 result = SQL::Statement::Sum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 266
  def _reduce_128( val, _values, result )
 result = SQL::Statement::Column.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 270
  def _reduce_129( val, _values, result )
 result = SQL::Statement::String.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 271
  def _reduce_130( val, _values, result )
 result = SQL::Statement::String.new('')
   result
  end
.,.,

 # reduce 131 omitted

 # reduce 132 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 278
  def _reduce_133( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 134 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 284
  def _reduce_135( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 285
  def _reduce_136( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 286
  def _reduce_137( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 287
  def _reduce_138( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..id4c34c6bb41', 'lib/sql/parser.racc', 204

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..id4c34c6bb41

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 3, 44, :_reduce_1,
 2, 44, :_reduce_2,
 1, 45, :_reduce_3,
 1, 45, :_reduce_4,
 3, 47, :_reduce_5,
 1, 47, :_reduce_none,
 3, 48, :_reduce_7,
 1, 48, :_reduce_none,
 4, 46, :_reduce_9,
 2, 51, :_reduce_10,
 1, 55, :_reduce_11,
 1, 55, :_reduce_none,
 1, 57, :_reduce_none,
 3, 58, :_reduce_14,
 4, 58, :_reduce_15,
 0, 52, :_reduce_none,
 2, 52, :_reduce_17,
 0, 53, :_reduce_none,
 3, 53, :_reduce_19,
 3, 60, :_reduce_20,
 1, 60, :_reduce_none,
 1, 61, :_reduce_none,
 0, 54, :_reduce_none,
 2, 54, :_reduce_24,
 6, 63, :_reduce_25,
 5, 63, :_reduce_26,
 4, 65, :_reduce_27,
 3, 65, :_reduce_28,
 3, 66, :_reduce_29,
 3, 67, :_reduce_30,
 1, 67, :_reduce_none,
 4, 68, :_reduce_32,
 3, 68, :_reduce_33,
 4, 69, :_reduce_34,
 3, 69, :_reduce_35,
 1, 56, :_reduce_none,
 1, 59, :_reduce_none,
 3, 59, :_reduce_38,
 1, 70, :_reduce_none,
 3, 70, :_reduce_40,
 2, 71, :_reduce_41,
 1, 71, :_reduce_none,
 1, 72, :_reduce_none,
 1, 73, :_reduce_none,
 3, 73, :_reduce_45,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 3, 75, :_reduce_51,
 3, 75, :_reduce_52,
 3, 75, :_reduce_53,
 3, 75, :_reduce_54,
 3, 75, :_reduce_55,
 3, 75, :_reduce_56,
 1, 64, :_reduce_none,
 1, 76, :_reduce_none,
 1, 49, :_reduce_none,
 3, 77, :_reduce_60,
 3, 77, :_reduce_61,
 1, 77, :_reduce_none,
 3, 78, :_reduce_63,
 3, 78, :_reduce_64,
 1, 78, :_reduce_none,
 2, 79, :_reduce_66,
 2, 79, :_reduce_67,
 1, 79, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 1, 80, :_reduce_none,
 3, 80, :_reduce_72,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 3, 62, :_reduce_75,
 1, 62, :_reduce_76,
 1, 85, :_reduce_none,
 4, 82, :_reduce_78,
 1, 82, :_reduce_none,
 4, 86, :_reduce_80,
 4, 86, :_reduce_81,
 4, 86, :_reduce_82,
 4, 86, :_reduce_83,
 4, 86, :_reduce_84,
 1, 50, :_reduce_none,
 1, 84, :_reduce_86,
 1, 84, :_reduce_none,
 1, 87, :_reduce_none,
 2, 88, :_reduce_89,
 1, 83, :_reduce_none,
 3, 89, :_reduce_91,
 2, 89, :_reduce_92,
 2, 89, :_reduce_93,
 1, 89, :_reduce_94 ]

racc_reduce_n = 95

racc_shift_n = 168

racc_action_table = [
    18,   151,   137,   139,    80,   140,    78,   116,   141,   152,
    85,    47,   105,    86,    28,    41,    42,   106,   107,     7,
   108,    64,   110,   111,    60,   113,    70,    33,    36,   115,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
    48,   116,    64,     7,    80,    64,    58,     7,    56,    55,
    84,    33,    36,    88,     4,     9,    13,    15,    19,    22,
    25,    29,    90,    34,    53,    83,    96,    52,    51,    50,
    49,     7,   147,    46,    44,    82,    78,   116,   153,    33,
    36,   115,     4,     9,    13,    15,    19,    22,    25,    29,
    90,    34,    40,   147,    96,   -36,   157,    39,   160,     7,
     7,   162,    38,   164,   165,     3,     2,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    90,    34,
   nil,   nil,    96,   nil,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,     4,     9,
    13,    15,    19,    22,    25,    29,    90,    34,   nil,   nil,
    96,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    90,    34,   nil,   nil,    96,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,    28,    34,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,     4,     9,
    13,    15,    19,    22,    25,    29,    28,    34,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,
    36,   nil,     4,     9,    13,    15,    19,    22,    25,    29,
    28,    34,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    28,    34,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,    28,    34,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,     4,     9,
    13,    15,    19,    22,    25,    29,    28,    34,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,
    36,   nil,     4,     9,    13,    15,    19,    22,    25,    29,
    28,    34,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    28,    34,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,    28,    34,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,    28,   nil,   nil,    33,    36,     7,     4,     9,
    13,    15,    19,    22,    25,    29,   nil,    34,     4,     9,
    13,    15,    19,    22,    25,    29,    28,    34,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,    28,   nil,   nil,    33,
    36,     7,     4,     9,    13,    15,    19,    22,    25,    29,
   nil,    34,     4,     9,    13,    15,    19,    22,    25,    29,
    28,    34,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    28,    34,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,    28,    34,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,     4,     9,
    13,    15,    19,    22,    25,    29,    96,    34,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,
    36,   nil,     4,     9,    13,    15,    19,    22,    25,    29,
    28,    34,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    28,    34,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,    28,    34,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,     4,     9,
    13,    15,    19,    22,    25,    29,    28,    34,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,
    36,   nil,     4,     9,    13,    15,    19,    22,    25,    29,
    28,    34,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    33,    36,   nil,     4,     9,    13,    15,
    19,    22,    25,    29,    28,    34,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    33,    36,   nil,
     4,     9,    13,    15,    19,    22,    25,    29,    28,    34,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,     4,     9,    13,    15,    19,    22,
    25,    29,   nil,    34,   120,   122,   nil,   125,   nil,   nil,
   128,   129,   nil,   nil,   nil,   119,   121,   123,   124,   126,
   127 ]

racc_action_check = [
     2,   129,   117,   120,   118,   120,    53,   117,   120,   129,
    65,    14,    71,    65,     2,    11,    11,    74,    75,     2,
    77,    85,    86,    87,    40,    88,    45,     2,     2,    92,
     2,     2,     2,     2,     2,     2,     2,     2,    40,     2,
    14,    93,    44,    40,    54,   110,    34,   113,    32,    29,
    61,    40,    40,    69,    40,    40,    40,    40,    40,    40,
    40,    40,   111,    40,    24,    60,   111,    22,    21,    19,
    15,   111,   125,    13,    12,    58,    56,   131,   132,   111,
   111,   136,   111,   111,   111,   111,   111,   111,   111,   111,
    96,   111,     9,   140,    96,     7,   143,     4,   151,    96,
   153,   154,     3,   158,   159,     1,     0,    96,    96,   nil,
    96,    96,    96,    96,    96,    96,    96,    96,   116,    96,
   nil,   nil,   116,   nil,   nil,   nil,   nil,   116,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   116,   116,   nil,   116,   116,
   116,   116,   116,   116,   116,   116,   115,   116,   nil,   nil,
   115,   nil,   nil,   nil,   nil,   115,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   115,   115,   nil,   115,   115,   115,   115,
   115,   115,   115,   115,    70,   115,   nil,   nil,    70,   nil,
   nil,   nil,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    70,    70,   nil,    70,    70,    70,    70,    70,    70,
    70,    70,   165,    70,   nil,   nil,   nil,   165,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   165,   165,   nil,   165,   165,
   165,   165,   165,   165,   165,   165,   126,   165,   nil,   nil,
   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   126,
   126,   nil,   126,   126,   126,   126,   126,   126,   126,   126,
   128,   126,   nil,   nil,   nil,   128,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   128,   128,   nil,   128,   128,   128,   128,
   128,   128,   128,   128,   124,   128,   nil,   nil,   nil,   124,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   124,   124,   nil,
   124,   124,   124,   124,   124,   124,   124,   124,   139,   124,
   nil,   nil,   nil,   139,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   139,   139,   nil,   139,   139,   139,   139,   139,   139,
   139,   139,   122,   139,   nil,   nil,   nil,   122,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   122,   122,   nil,   122,   122,
   122,   122,   122,   122,   122,   122,   121,   122,   nil,   nil,
   nil,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,
   121,   nil,   121,   121,   121,   121,   121,   121,   121,   121,
   119,   121,   nil,   nil,   nil,   119,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   119,   119,   nil,   119,   119,   119,   119,
   119,   119,   119,   119,    28,   119,   nil,   nil,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,    28,   nil,
    28,    28,    28,    28,    28,    28,    28,    28,   127,    28,
   nil,   nil,   nil,   127,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   127,   127,   nil,   127,   127,   127,   127,   127,   127,
   127,   127,   141,   127,   nil,   nil,   nil,   141,   nil,   nil,
   nil,   nil,    33,   nil,   nil,   141,   141,    33,   141,   141,
   141,   141,   141,   141,   141,   141,   nil,   141,    33,    33,
    33,    33,    33,    33,    33,    33,   147,    33,   nil,   nil,
   nil,   147,   nil,   nil,   nil,   nil,    36,   nil,   nil,   147,
   147,    36,   147,   147,   147,   147,   147,   147,   147,   147,
   nil,   147,    36,    36,    36,    36,    36,    36,    36,    36,
   157,    36,   nil,   nil,   nil,   157,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   157,   157,   nil,   157,   157,   157,   157,
   157,   157,   157,   157,    41,   157,   nil,   nil,   nil,    41,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,    41,   nil,
    41,    41,    41,    41,    41,    41,    41,    41,    42,    41,
   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    42,    42,   nil,    42,    42,    42,    42,    42,    42,
    42,    42,   162,    42,   nil,   nil,   nil,   162,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   162,   162,   nil,   162,   162,
   162,   162,   162,   162,   162,   162,    90,   162,   nil,   nil,
   nil,    90,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,
    90,   nil,    90,    90,    90,    90,    90,    90,    90,    90,
    46,    90,   nil,   nil,   nil,    46,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    46,    46,   nil,    46,    46,    46,    46,
    46,    46,    46,    46,    47,    46,   nil,   nil,   nil,    47,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    47,   nil,
    47,    47,    47,    47,    47,    47,    47,    47,    48,    47,
   nil,   nil,   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    48,    48,   nil,    48,    48,    48,    48,    48,    48,
    48,    48,    49,    48,   nil,   nil,   nil,    49,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    49,   nil,    49,    49,
    49,    49,    49,    49,    49,    49,    50,    49,   nil,   nil,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    50,
    50,   nil,    50,    50,    50,    50,    50,    50,    50,    50,
    51,    50,   nil,   nil,   nil,    51,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    51,    51,   nil,    51,    51,    51,    51,
    51,    51,    51,    51,    52,    51,   nil,   nil,   nil,    52,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,    52,   nil,
    52,    52,    52,    52,    52,    52,    52,    52,   123,    52,
   nil,   nil,   nil,   123,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   123,   123,   nil,   123,   123,   123,   123,   123,   123,
   123,   123,   nil,   123,   102,   102,   nil,   102,   nil,   nil,
   102,   102,   nil,   nil,   nil,   102,   102,   102,   102,   102,
   102 ]

racc_action_pointer = [
   104,   105,    -3,   102,    55,   nil,   nil,    62,   nil,    75,
   nil,   -15,    68,    56,     8,    53,   nil,   nil,   nil,    52,
   nil,    64,    50,   nil,    59,   nil,   nil,   nil,   377,     8,
   nil,   nil,    15,   435,    13,   nil,   469,   nil,   nil,   nil,
    21,   517,   541,   nil,    20,    17,   613,   637,   661,   685,
   709,   733,   757,   -16,    26,   nil,    54,   nil,    33,   nil,
    47,    32,   nil,   nil,   nil,     6,   nil,   nil,   nil,    43,
   161,    -6,   nil,   nil,    -1,     0,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    -1,    14,    11,    14,   nil,
   589,   nil,    14,    18,   nil,   nil,    77,   nil,   nil,   nil,
   nil,   nil,   811,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23,    49,   nil,    25,   nil,   133,   105,   -16,   -14,   353,
   -11,   329,   305,   781,   257,    55,   209,   401,   233,   -12,
   nil,    54,    74,   nil,   nil,   nil,    66,   nil,   nil,   281,
    76,   425,   nil,    81,   nil,   nil,   nil,   459,   nil,   nil,
   nil,    77,   nil,    78,    86,   nil,   nil,   493,    85,   100,
   nil,   nil,   565,   nil,   nil,   185,   nil,   nil ]

racc_action_default = [
   -95,   -95,   -95,   -95,   -95,   -88,   -59,   -85,   -90,   -95,
   -77,   -62,    -2,   -95,   -65,   -95,   -68,    -4,    -3,   -95,
   -69,    -6,   -95,   -71,    -8,   -86,   -76,   -73,   -95,   -95,
   -74,   -70,   -95,   -95,   -94,   -79,   -95,   -87,   168,   -93,
   -95,   -95,   -95,    -1,   -95,   -16,   -95,   -95,   -95,   -95,
   -95,   -95,   -95,   -95,   -95,   -89,   -95,   -66,   -92,   -67,
   -95,   -95,   -60,   -61,   -36,   -10,   -11,   -12,   -13,   -18,
   -95,   -95,   -63,   -64,   -95,   -95,    -5,   -95,   -85,    -7,
   -72,   -75,   -91,   -78,   -80,   -95,   -95,   -23,   -95,   -49,
   -95,   -50,   -37,   -17,   -58,   -39,   -95,   -42,   -43,   -47,
   -44,   -46,   -95,   -57,   -48,   -81,   -82,   -83,   -84,   -14,
   -95,   -95,    -9,   -95,   -41,   -95,   -95,   -95,   -58,   -95,
   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,
   -15,   -24,   -19,   -21,   -22,   -40,   -38,   -45,   -51,   -95,
   -95,   -95,   -52,   -95,   -53,   -54,   -28,   -95,   -55,   -56,
   -33,   -95,   -35,   -95,   -95,   -27,   -32,   -95,   -95,   -31,
   -34,   -20,   -95,   -26,   -29,   -95,   -25,   -30 ]

racc_goto_table = [
    24,    66,    17,   138,    93,   142,   143,   144,   145,   158,
   148,   149,   150,   134,   133,    79,   146,    57,    81,    68,
    59,    72,    73,   154,    67,   156,    54,   167,    62,    63,
   117,   155,   132,    65,   112,    87,    69,    45,    61,   136,
   135,   163,   109,   114,    71,   131,   166,    74,    75,    24,
    77,    76,    43,   134,   161,    12,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   118,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   159,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   159 ]

racc_goto_check = [
     6,    13,     4,    21,    16,    21,    21,    21,    21,    24,
    21,    21,    21,    19,    18,     7,    23,    37,     7,    15,
    37,    35,    35,    21,    14,    21,     6,    24,    34,    34,
    16,    23,    17,    12,    11,    10,     9,     8,     6,    27,
    28,    21,    13,    29,     6,    16,    21,     6,     6,     6,
     6,     4,     3,    19,    18,     2,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    56,    53,    40,     0,   nil,    -2,   -38,    25,    -9,
   -34,   -53,   -11,   -43,   -20,   -25,   -66,   -81,   -99,  -100,
   nil,  -116,   nil,  -109,  -138,   nil,   nil,   -77,   -75,   -47,
   nil,   nil,   nil,   nil,   -13,   -26,   nil,   -16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    21,    94,    26,   nil,   nil,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,    31,
    99,   102,   104,   nil,   nil,    89,    91,    92,    95,    97,
    98,   100,   101,   103,     6,    11,    14,    16,    20,    23,
    27,    30,    32,    35,    37,     5,     8 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :asterisk => 3,
 :comma => 4,
 :AS => 5,
 :FROM => 6,
 :CROSS => 7,
 :JOIN => 8,
 :WHERE => 9,
 :GROUP => 10,
 :BY => 11,
 :HAVING => 12,
 :NOT => 13,
 :BETWEEN => 14,
 :AND => 15,
 :IN => 16,
 :left_paren => 17,
 :right_paren => 18,
 :LIKE => 19,
 :IS => 20,
 :NULL => 21,
 :identifier => 22,
 :OR => 23,
 :equals_operator => 24,
 :not_equals_operator => 25,
 :less_than_operator => 26,
 :greater_than_operator => 27,
 :less_than_or_equals_operator => 28,
 :greater_than_or_equals_operator => 29,
 :plus_sign => 30,
 :minus_sign => 31,
 :solidus => 32,
 :period => 33,
 :COUNT => 34,
 :AVG => 35,
 :MAX => 36,
 :MIN => 37,
 :SUM => 38,
 :character_string_literal => 39,
 :DATE => 40,
 :date_string => 41,
 :unsigned_integer => 42 }

racc_use_result_var = true

racc_nt_base = 43

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'asterisk',
'comma',
'AS',
'FROM',
'CROSS',
'JOIN',
'WHERE',
'GROUP',
'BY',
'HAVING',
'NOT',
'BETWEEN',
'AND',
'IN',
'left_paren',
'right_paren',
'LIKE',
'IS',
'NULL',
'identifier',
'OR',
'equals_operator',
'not_equals_operator',
'less_than_operator',
'greater_than_operator',
'less_than_or_equals_operator',
'greater_than_or_equals_operator',
'plus_sign',
'minus_sign',
'solidus',
'period',
'COUNT',
'AVG',
'MAX',
'MIN',
'SUM',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'$start',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'column_name',
'from_clause',
'where_clause',
'group_by_clause',
'having_clause',
'table_reference',
'table_name',
'joined_table',
'cross_join',
'search_condition',
'grouping_column_reference_list',
'grouping_column_reference',
'column_reference',
'between_predicate',
'row_value_constructor',
'in_predicate',
'in_predicate_value',
'in_value_list',
'like_predicate',
'null_predicate',
'boolean_term',
'boolean_factor',
'boolean_test',
'boolean_primary',
'predicate',
'comparison_predicate',
'row_value_constructor_element',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'set_function_specification',
'unsigned_numeric_literal',
'general_literal',
'qualifier',
'general_set_function',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 7
  def _reduce_2( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 10
  def _reduce_3( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_4( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 14
  def _reduce_5( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 18
  def _reduce_7( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

 # reduce 8 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 22
  def _reduce_9( val, _values, result )
 result = SQL::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 25
  def _reduce_10( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 28
  def _reduce_11( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

 # reduce 12 omitted

 # reduce 13 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 35
  def _reduce_14( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], SQL::Statement::Table.new(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 36
  def _reduce_15( val, _values, result )
 result = SQL::Statement::CrossJoin.new(val[0], SQL::Statement::Table.new(val[3]))
   result
  end
.,.,

 # reduce 16 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 40
  def _reduce_17( val, _values, result )
 result = SQL::Statement::WhereClause.new(val[1])
   result
  end
.,.,

 # reduce 18 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_19( val, _values, result )
 result = SQL::Statement::GroupByClause.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 47
  def _reduce_20( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_24( val, _values, result )
 result = SQL::Statement::HavingClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 59
  def _reduce_25( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Between.new(val[0], val[3], val[5]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 60
  def _reduce_26( val, _values, result )
 result = SQL::Statement::Between.new(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 63
  def _reduce_27( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::In.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 64
  def _reduce_28( val, _values, result )
 result = SQL::Statement::In.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 67
  def _reduce_29( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 70
  def _reduce_30( val, _values, result )
 result = Array(val[0]) + Array(val[2])
   result
  end
.,.,

 # reduce 31 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 77
  def _reduce_32( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Like.new(val[0], val[3]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 78
  def _reduce_33( val, _values, result )
 result = SQL::Statement::Like.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 81
  def _reduce_34( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Is.new(val[0], SQL::Statement::Null.new))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 82
  def _reduce_35( val, _values, result )
 result = SQL::Statement::Is.new(val[0], SQL::Statement::Null.new)
   result
  end
.,.,

 # reduce 36 omitted

 # reduce 37 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 91
  def _reduce_38( val, _values, result )
 result = SQL::Statement::Or.new(val[0], val[2])
   result
  end
.,.,

 # reduce 39 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 95
  def _reduce_40( val, _values, result )
 result = SQL::Statement::And.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 98
  def _reduce_41( val, _values, result )
 result = SQL::Statement::Not.new(val[1])
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 106
  def _reduce_45( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 46 omitted

 # reduce 47 omitted

 # reduce 48 omitted

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 116
  def _reduce_51( val, _values, result )
 result = SQL::Statement::Equals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 117
  def _reduce_52( val, _values, result )
 result = SQL::Statement::Not.new(SQL::Statement::Equals.new(val[0], val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 118
  def _reduce_53( val, _values, result )
 result = SQL::Statement::Less.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 119
  def _reduce_54( val, _values, result )
 result = SQL::Statement::Greater.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 120
  def _reduce_55( val, _values, result )
 result = SQL::Statement::LessOrEquals.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 121
  def _reduce_56( val, _values, result )
 result = SQL::Statement::GreaterOrEquals.new(val[0], val[2])
   result
  end
.,.,

 # reduce 57 omitted

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 133
  def _reduce_60( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 134
  def _reduce_61( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 62 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 138
  def _reduce_63( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 139
  def _reduce_64( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 65 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 143
  def _reduce_66( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 144
  def _reduce_67( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 68 omitted

 # reduce 69 omitted

 # reduce 70 omitted

 # reduce 71 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 151
  def _reduce_72( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 73 omitted

 # reduce 74 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 158
  def _reduce_75( val, _values, result )
 result = SQL::Statement::QualifiedColumn.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 159
  def _reduce_76( val, _values, result )
 result = SQL::Statement::Column.new(val[0])
   result
  end
.,.,

 # reduce 77 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 165
  def _reduce_78( val, _values, result )
 result = SQL::Statement::Count.new(SQL::Statement::All.new)
   result
  end
.,.,

 # reduce 79 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 169
  def _reduce_80( val, _values, result )
 result = SQL::Statement::Count.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 170
  def _reduce_81( val, _values, result )
 result = SQL::Statement::Average.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 171
  def _reduce_82( val, _values, result )
 result = SQL::Statement::Maximum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 172
  def _reduce_83( val, _values, result )
 result = SQL::Statement::Minimum.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 173
  def _reduce_84( val, _values, result )
 result = SQL::Statement::Sum.new(val[2])
   result
  end
.,.,

 # reduce 85 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 181
  def _reduce_86( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 87 omitted

 # reduce 88 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 188
  def _reduce_89( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 90 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 194
  def _reduce_91( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 195
  def _reduce_92( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 196
  def _reduce_93( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 197
  def _reduce_94( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL

#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/sql/parser.racc".
#

require 'racc/parser'


require File.dirname(__FILE__) + '/parser.rex.rb'


module SQL

  class Parser < Racc::Parser

module_eval <<'..end lib/sql/parser.racc modeval..id233a504246', 'lib/sql/parser.racc', 90

def self.parse(sql)
  new.scan_str(sql)
end
..end lib/sql/parser.racc modeval..id233a504246

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 3, 19, :_reduce_1,
 2, 19, :_reduce_2,
 1, 20, :_reduce_3,
 1, 20, :_reduce_4,
 3, 22, :_reduce_5,
 1, 22, :_reduce_none,
 3, 23, :_reduce_7,
 1, 23, :_reduce_none,
 1, 21, :_reduce_none,
 2, 26, :_reduce_10,
 1, 27, :_reduce_11,
 1, 28, :_reduce_none,
 1, 24, :_reduce_none,
 3, 29, :_reduce_14,
 3, 29, :_reduce_15,
 1, 29, :_reduce_none,
 3, 30, :_reduce_17,
 3, 30, :_reduce_18,
 1, 30, :_reduce_none,
 2, 31, :_reduce_20,
 2, 31, :_reduce_21,
 1, 31, :_reduce_none,
 1, 32, :_reduce_none,
 3, 32, :_reduce_24,
 1, 33, :_reduce_none,
 1, 33, :_reduce_none,
 1, 25, :_reduce_none,
 1, 35, :_reduce_28,
 1, 35, :_reduce_none,
 1, 36, :_reduce_none,
 2, 37, :_reduce_31,
 1, 34, :_reduce_none,
 3, 38, :_reduce_33,
 2, 38, :_reduce_34,
 2, 38, :_reduce_35,
 1, 38, :_reduce_36 ]

racc_reduce_n = 37

racc_shift_n = 54

racc_action_table = [
    13,     1,    36,    33,    34,    19,    21,    31,     3,    37,
     8,    11,    39,    15,    17,    19,    21,    41,     3,    42,
     8,    11,    30,    15,    17,    19,    21,    45,     3,    46,
     8,    11,    29,    15,    17,    19,    21,    28,     3,    27,
     8,    11,    25,    15,    17,    19,    21,    53,     3,   nil,
     8,    11,   nil,    15,    17,    19,    21,   nil,     3,   nil,
     8,    11,   nil,    15,    17,    19,    21,   nil,     3,   nil,
     8,    11,   nil,    15,    17,     3,   nil,     8,    11,   nil,
    15,    17,     3,   nil,     8,    11,   nil,    15,    17 ]

racc_action_check = [
     1,     0,    22,    20,    20,     1,     1,    17,     1,    22,
     1,     1,    23,     1,     1,     3,     3,    25,     3,    26,
     3,     3,    15,     3,     3,    37,    37,    28,    37,    30,
    37,    37,    11,    37,    37,    34,    34,    10,    34,     7,
    34,    34,     2,    34,    34,    36,    36,    39,    36,   nil,
    36,    36,   nil,    36,    36,    27,    27,   nil,    27,   nil,
    27,    27,   nil,    27,    27,    33,    33,   nil,    33,   nil,
    33,    33,   nil,    33,    33,    21,   nil,    21,    21,   nil,
    21,    21,    19,   nil,    19,    19,   nil,    19,    19 ]

racc_action_pointer = [
    -1,    -3,    42,     7,   nil,   nil,   nil,    35,   nil,   nil,
    32,    17,   nil,   nil,   nil,     5,   nil,    -9,   nil,    71,
    -5,    64,    -1,     6,   nil,    17,     7,    47,    20,   nil,
    13,   nil,   nil,    57,    27,   nil,    37,    17,   nil,    40,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_action_default = [
   -37,   -37,   -37,   -37,   -23,    -4,   -25,    -6,   -28,   -26,
    -8,   -37,   -29,    -3,   -30,   -36,   -32,   -37,   -13,   -37,
   -16,   -37,   -19,    -2,   -22,   -37,   -37,   -37,   -37,   -31,
   -34,   -35,   -20,   -37,   -37,   -21,   -37,   -37,    -9,   -37,
    -1,    54,   -24,    -5,    -7,   -27,   -33,   -14,   -15,   -17,
   -18,   -10,   -11,   -12 ]

racc_goto_table = [
     5,    32,    38,    35,    49,    50,    47,    48,    44,    26,
    51,    52,    40,    23,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43 ]

racc_goto_check = [
     4,    14,     8,    14,    12,    12,    11,    11,     7,     6,
     9,    10,     3,     2,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    14,    12,   -11,    -1,   nil,     6,   -20,   -21,   -29,
   -28,   -27,   -32,   nil,   -18,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     7,    10,   nil,   nil,   nil,
   nil,    18,    20,    22,    24,     4,     6,     9,    12,    14,
    16 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :SELECT => 2,
 :asterisk => 3,
 :comma => 4,
 :AS => 5,
 :FROM => 6,
 :identifier => 7,
 :plus_sign => 8,
 :minus_sign => 9,
 :solidus => 10,
 :left_paren => 11,
 :right_paren => 12,
 :character_string_literal => 13,
 :DATE => 14,
 :date_string => 15,
 :unsigned_integer => 16,
 :period => 17 }

racc_use_result_var = true

racc_nt_base = 18

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'SELECT',
'asterisk',
'comma',
'AS',
'FROM',
'identifier',
'plus_sign',
'minus_sign',
'solidus',
'left_paren',
'right_paren',
'character_string_literal',
'DATE',
'date_string',
'unsigned_integer',
'period',
'$start',
'query_specification',
'select_list',
'table_expression',
'select_sublist',
'derived_column',
'value_expression',
'column_name',
'from_clause',
'table_reference',
'table_name',
'numeric_value_expression',
'term',
'factor',
'value_expression_primary',
'unsigned_literal',
'unsigned_numeric_literal',
'general_literal',
'datetime_literal',
'date_literal',
'exact_numeric_literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 6
  def _reduce_1( val, _values, result )
 result = SQL::Statement::Select.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 7
  def _reduce_2( val, _values, result )
 result = SQL::Statement::Select.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 10
  def _reduce_3( val, _values, result )
 result = SQL::Statement::All.new
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 11
  def _reduce_4( val, _values, result )
 result = SQL::Statement::SelectList.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 14
  def _reduce_5( val, _values, result )
 result = [val[0]] + Array(val[2])
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 18
  def _reduce_7( val, _values, result )
 result = SQL::Statement::As.new(val[0], val[2])
   result
  end
.,.,

 # reduce 8 omitted

 # reduce 9 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 25
  def _reduce_10( val, _values, result )
 result = SQL::Statement::FromClause.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 28
  def _reduce_11( val, _values, result )
 result = SQL::Statement::Table.new(val[0])
   result
  end
.,.,

 # reduce 12 omitted

 # reduce 13 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 39
  def _reduce_14( val, _values, result )
 result = SQL::Statement::Add.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 40
  def _reduce_15( val, _values, result )
 result = SQL::Statement::Subtract.new(val[0], val[2])
   result
  end
.,.,

 # reduce 16 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 44
  def _reduce_17( val, _values, result )
 result = SQL::Statement::Multiply.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 45
  def _reduce_18( val, _values, result )
 result = SQL::Statement::Divide.new(val[0], val[2])
   result
  end
.,.,

 # reduce 19 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 49
  def _reduce_20( val, _values, result )
 result = SQL::Statement::UnaryPlus.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 50
  def _reduce_21( val, _values, result )
 result = SQL::Statement::UnaryMinus.new(val[1])
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 55
  def _reduce_24( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 67
  def _reduce_28( val, _values, result )
 result = SQL::Statement::String.new(val[0])
   result
  end
.,.,

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 74
  def _reduce_31( val, _values, result )
 result = SQL::Statement::Date.new(val[1])
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'lib/sql/parser.racc', 80
  def _reduce_33( val, _values, result )
 result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 81
  def _reduce_34( val, _values, result )
 result = SQL::Statement::Float.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 82
  def _reduce_35( val, _values, result )
 result = SQL::Statement::Float.new("0.#{val[1]}".to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/sql/parser.racc', 83
  def _reduce_36( val, _values, result )
 result = SQL::Statement::Integer.new(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module SQL
